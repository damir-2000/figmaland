{"version":3,"sources":["main.js","components/player.js"],"names":["document","addEventListener","Player","option","selector","player","querySelector","video","playerControls","navigationClassName","nav","play","centerButton","screen","progressBar","progressTime","progressBuffer","mute","volumeBar","volumeLevel","timeDurationMin","timeDurationSec","timeCurentMin","timeCurentSec","setting","settingMenu","videoSpeed","navigation","querySelectorAll","iconClassName","mainClass","pause","fullScreen","smallScreen","volumeUp","volumeDown","volumeOff","volumeMute","volume","videoAlready","videoScroll","timer","start","e","target","classList","remove","toggle","contains","speed","fullscreenElement","add","body","style","width","currentTime","duration","buffered","end","length","innerHTML","Math","floor","clearTimeout","cursor","paused","setTimeout","display","exitFullscreen","requestFullscreen","muted","progreesStart","context","clientX","changedTouches","getBoundingClientRect","x","offsetWidth","progressMove","progressEnd","removeEventListener","icon","lev","deltaY","btn","playbackRate","getAttribute","forEach","element","features__player"],"mappings":"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","file":"main.min.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\r\n// // =include components/img.js\r\n// // =include components/header-menu.js\r\nclass Player{\r\n    constructor (option){\r\n        this.selector = {\r\n            player: document.querySelector(`.${option}`),\r\n            video: document.querySelector(`.${option}__video`),\r\n            playerControls: document.querySelector(`.${option}-controls`),\r\n        }\r\n        this.navigationClassName = {\r\n            nav : `${option}__nav`,\r\n            \r\n            play : `${option}-controls__play`,\r\n            centerButton : `${option}__center-btn`,\r\n            screen : `${option}-controls__screen`,\r\n            \r\n            progressBar : `${option}-progress-bar`,\r\n            progressTime : `${option}-progress-bar__time`,\r\n            progressBuffer : `${option}-progress-bar__buffer`,\r\n            \r\n            mute : `${option}-controls__volume-btn`,\r\n            volumeBar:`${option}-controls__volume-bar`,\r\n            volumeLevel:`${option}-controls__volume-bar-progress`,\r\n            \r\n            timeDurationMin : `${option}-time__duration-minute`,\r\n            timeDurationSec : `${option}-time__duration-sec` ,\r\n            timeCurentMin : `${option}-time__curent-minute`,\r\n            timeCurentSec : `${option}-time__curent-sec`,\r\n            \r\n            \r\n            \r\n            setting:`${option}-controls__setting`,\r\n            settingMenu:`${option}-controls__setting-menu`,\r\n            \r\n            videoSpeed:`${option}__speed`,\r\n        }\r\n        \r\n        this.navigation = {\r\n            nav : document.querySelector(`.${this.navigationClassName.nav}`),\r\n            \r\n            play : document.querySelector(`.${this.navigationClassName.play}`),\r\n            \r\n            centerButton : document.querySelector(`.${this.navigationClassName.centerButton}`),\r\n            \r\n            screen : document.querySelector(`.${this.navigationClassName.screen}`),\r\n            \r\n            progressBar : document.querySelector(`.${this.navigationClassName.progressBar}`),\r\n            progressTime : document.querySelector(`.${this.navigationClassName.progressTime}`),\r\n            progressBuffer : document.querySelector(`.${this.navigationClassName.progressBuffer}`),\r\n            \r\n            mute : document.querySelector(`.${this.navigationClassName.mute}`),\r\n            volumeBar : document.querySelector(`.${this.navigationClassName.volumeBar}`),\r\n            volumeLevel : document.querySelector(`.${this.navigationClassName.volumeLevel}`),\r\n            \r\n            timeDurationMin : document.querySelector(`.${this.navigationClassName.timeDurationMin}`),\r\n            timeDurationSec : document.querySelector(`.${this.navigationClassName.timeDurationSec}`),\r\n            timeCurentMin : document.querySelector(`.${this.navigationClassName.timeCurentMin}`),\r\n            timeCurentSec : document.querySelector(`.${this.navigationClassName.timeCurentSec}`),\r\n            \r\n            \r\n            \r\n            setting : document.querySelector(`.${this.navigationClassName.setting}`),\r\n            settingMenu : document.querySelector(`.${this.navigationClassName.settingMenu}`),\r\n            videoSpeed : document.querySelectorAll(`.${this.navigationClassName.videoSpeed}`),\r\n            \r\n        }\r\n        \r\n        this.iconClassName = {\r\n            mainClass: 'fas',\r\n            play: 'fa-play',\r\n            pause: 'fa-pause',\r\n            setting: 'fa-cog',\r\n            fullScreen: 'fa-expand',\r\n            smallScreen: 'fa-compress',\r\n            \r\n            volumeUp: 'fa-volume-up',\r\n            volumeDown: 'fa-volume-down',\r\n            volumeOff: 'fa-volume-off',\r\n            volumeMute: 'fa-volume-mute',\r\n        }\r\n        this.volume = this.selector.video.volume;\r\n        \r\n        this.videoAlready = false;\r\n        this.videoScroll = false;\r\n        this.timer;\r\n        \r\n        this.start();\r\n    }\r\n    \r\n    start(){\r\n        \r\n        /* слушаем нажатие на кнопки   */\r\n        this.selector.player.addEventListener('click', (e) =>{\r\n            \r\n            if (e.target != this.navigation.setting){\r\n                \r\n                this.navigation.settingMenu.classList.remove(`${this.navigationClassName.settingMenu}_active`);\r\n            }\r\n            \r\n            switch (e.target) {\r\n                case this.navigation.play:\r\n                    this.play();\r\n                    break;\r\n                    \r\n                case this.selector.video:\r\n                    this.play();\r\n                    break;\r\n                    \r\n                case this.navigation.centerButton:\r\n                    this.play();\r\n                    break;\r\n                    \r\n                case this.navigation.screen:\r\n                    this.screen();\r\n                    break;\r\n                    \r\n                case this.navigation.mute:\r\n                    this.mute();\r\n                    \r\n                    break;\r\n                case this.navigation.setting:\r\n                    \r\n                    this.navigation.settingMenu.classList.toggle(`${this.navigationClassName.settingMenu}_active`);\r\n                    \r\n                    break;\r\n                    \r\n            \r\n                default:\r\n                    break;\r\n            }\r\n            if (e.target.classList.contains(this.navigationClassName.videoSpeed)) {\r\n                \r\n                this.speed(e.target)\r\n            }\r\n            \r\n        });\r\n        \r\n        /* смена полноэкранного режима */\r\n        this.selector.player.addEventListener(\"fullscreenchange\", (e) =>{\r\n            if (!document.fullscreenElement) {\r\n                this.navigation.screen.classList.remove(this.iconClassName.smallScreen);\r\n                this.navigation.screen.classList.add(this.iconClassName.fullScreen);\r\n                \r\n                document.body.classList.remove('scroll-stop');\r\n            }\r\n            else{\r\n                this.navigation.screen.classList.remove(this.iconClassName.fullScreen);\r\n                this.navigation.screen.classList.add(this.iconClassName.smallScreen);\r\n                \r\n                document.body.classList.add('scroll-stop');\r\n            }\r\n            \r\n        });\r\n        \r\n        /* двойной клик для полноэкранного режима */\r\n        this.selector.video.addEventListener('dblclick', () =>{\r\n            this.screen();\r\n        });\r\n        \r\n        /* работает при возпроизведении */\r\n        this.selector.video.addEventListener('timeupdate', () =>{\r\n            if (!this.videoScroll) {\r\n                this.navigation.progressTime.style.width = `${this.selector.video.currentTime / this.selector.video.duration * 100}%`;\r\n            }\r\n            \r\n\r\n            this.navigation.progressBuffer.style.width = `${this.selector.video.buffered.end(this.selector.video.buffered.length-1) / this.selector.video.duration * 100}%`;\r\n            \r\n            this.navigation.timeCurentMin.innerHTML = Math.floor(this.selector.video.currentTime / 60);\r\n            this.navigation.timeCurentSec.innerHTML = `${Math.floor(this.selector.video.currentTime % 60) < 10 ? '0' : ''}${Math.floor(this.selector.video.currentTime % 60)}`;\r\n            \r\n            this.navigation.timeDurationMin.innerHTML = Math.floor(this.selector.video.duration / 60);\r\n            this.navigation.timeDurationSec.innerHTML = `${Math.floor(this.selector.video.duration % 60) < 10 ? '0' : ''}${Math.floor(this.selector.video.duration % 60)}`;\r\n            \r\n        });\r\n        \r\n        /* работает при загрузке видео данных */\r\n        this.selector.video.addEventListener('progress', () =>{\r\n            if (this.videoAlready) {\r\n                this.navigation.progressBuffer.style.width = `${this.selector.video.buffered.end(this.selector.video.buffered.length-1) / this.selector.video.duration * 100}%`;\r\n                \r\n            }\r\n                \r\n            \r\n            \r\n        });\r\n        \r\n        /* конец видео */\r\n        this.selector.video.addEventListener('ended', () =>{\r\n            this.selector.video.currentTime = 0;\r\n            \r\n            this.navigation.play.classList.remove(this.iconClassName.pause);\r\n            this.navigation.play.classList.add(this.iconClassName.play);\r\n        });\r\n        \r\n        \r\n        /* Движение курсора */\r\n        this.selector.player.addEventListener('mousemove', () =>{\r\n            clearTimeout(this.timer);\r\n            if (!this.navigation.nav.classList.contains(`${this.navigationClassName.nav}_active`) && this.videoAlready) {\r\n                this.navigation.nav.classList.add(`${this.navigationClassName.nav}_active`);\r\n                this.player.style.cursor = 'auto';\r\n                \r\n            }\r\n            if (!this.selector.video.paused && this.navigation.nav.classList.contains(`${this.navigationClassName.nav}_active`)) {\r\n                \r\n                this.timer = setTimeout(() => {\r\n                    \r\n                    this.navigation.nav.classList.remove(`${this.navigationClassName.nav}_active`);\r\n                    \r\n                    this.player.style.cursor = 'none';\r\n                }, 2000);\r\n            }\r\n            \r\n            \r\n        });\r\n        \r\n        \r\n        this.progressBar();\r\n        this.volumeBar();\r\n    }\r\n    play(){\r\n        if (!this.videoAlready) {\r\n            this.navigation.nav.classList.add(`${this.navigationClassName.nav}_active`);\r\n            this.navigation.centerButton.style.display = 'none';\r\n        }\r\n        \r\n        \r\n        this.videoAlready = true;\r\n       if (this.selector.video.paused) {\r\n            this.selector.video.play();\r\n            this.navigation.play.classList.remove(this.iconClassName.play);\r\n            this.navigation.play.classList.add(this.iconClassName.pause);\r\n            \r\n        }\r\n       else{\r\n            this.selector.video.pause();\r\n            this.navigation.play.classList.remove(this.iconClassName.pause);\r\n            this.navigation.play.classList.add(this.iconClassName.play);\r\n            \r\n        }\r\n        \r\n   } \r\n   \r\n   screen(){\r\n        if (!document.fullscreenElement) {\r\n            this.selector.player.requestFullscreen();\r\n        }\r\n        else{\r\n            document.exitFullscreen();\r\n            \r\n        }\r\n         \r\n   }\r\n    mute(){\r\n        this.navigation.mute.classList.remove(this.iconClassName.volumeUp);\r\n        this.navigation.mute.classList.remove(this.iconClassName.volumeDown);\r\n        this.navigation.mute.classList.remove(this.iconClassName.volumeOff);\r\n        this.navigation.mute.classList.remove(this.iconClassName.volumeMute);\r\n        \r\n        if (!this.selector.video.muted) {\r\n            this.selector.video.muted = true;\r\n           \r\n            \r\n            this.navigation.mute.classList.add(this.iconClassName.volumeMute);\r\n            \r\n        }\r\n        else{\r\n            this.selector.video.muted = false;\r\n            \r\n            if (this.volume > 0.5) {\r\n                this.navigation.mute.classList.add(this.iconClassName.volumeUp);\r\n            }\r\n            else if(this.volume < 0.1){\r\n                this.navigation.mute.classList.add(this.iconClassName.volumeOff);\r\n            }\r\n            else if(this.volume < 0.5){\r\n                this.navigation.mute.classList.add(this.iconClassName.volumeDown);\r\n            }\r\n            \r\n        }\r\n        \r\n    }\r\n    \r\n    progressBar(){\r\n        let context = this;\r\n        this.navigation.progressBar.addEventListener('mousedown', progreesStart);\r\n        this.navigation.progressBar.addEventListener('touchstart', progreesStart);\r\n            \r\n            \r\n        function progreesStart(e) {\r\n            context.videoScroll = true;\r\n        \r\n            context.selector.video.currentTime = (((e.clientX || e.changedTouches[0].clientX)-context.navigation.progressBar.getBoundingClientRect().x) / context.navigation.progressBar.offsetWidth * context.selector.video.duration);\r\n            \r\n            context.navigation.progressTime.style.width = `${((e.clientX || e.changedTouches[0].clientX)-context.navigation.progressBar.getBoundingClientRect().x) / context.navigation.progressBar.offsetWidth * 100}%`;\r\n            \r\n            context.selector.player.addEventListener('mousemove', progressMove);\r\n            context.selector.player.addEventListener('mouseup', progressEnd);\r\n            context.selector.player.addEventListener('mouseleave', progressEnd);\r\n            context.selector.player.addEventListener('touchmove', progressMove);\r\n            context.selector.player.addEventListener('touchend', progressEnd);\r\n            context.selector.player.addEventListener('touchcancel', progressEnd);\r\n        }\r\n        \r\n        function progressMove(e) {\r\n            context.selector.video.currentTime = (((e.clientX || e.changedTouches[0].clientX)-context.navigation.progressBar.getBoundingClientRect().x) / context.navigation.progressBar.offsetWidth * context.selector.video.duration);\r\n            \r\n            context.navigation.progressTime.style.width = `${((e.clientX || e.changedTouches[0].clientX)-context.navigation.progressBar.getBoundingClientRect().x) / context.navigation.progressBar.offsetWidth * 100}%`;\r\n        }\r\n        function progressEnd() {\r\n            context.videoScroll = false;\r\n            context.selector.player.removeEventListener('mousemove', progressMove);\r\n            context.selector.player.removeEventListener('mouseup', progressEnd);\r\n            context.selector.player.removeEventListener('mouseleave', progressEnd);\r\n            context.selector.player.removeEventListener('touchmove', progressMove);\r\n            context.selector.player.removeEventListener('touchend', progressEnd);\r\n            context.selector.player.removeEventListener('touchcancel', progressEnd);\r\n        }\r\n        \r\n        \r\n    }\r\n    volumeBar(){\r\n        let context = this;\r\n        \r\n        \r\n        function icon(lev) {\r\n            context.navigation.mute.classList.remove(context.iconClassName.volumeUp);\r\n            context.navigation.mute.classList.remove(context.iconClassName.volumeDown);\r\n            context.navigation.mute.classList.remove(context.iconClassName.volumeOff);\r\n            context.navigation.mute.classList.remove(context.iconClassName.volumeMute);\r\n            if (lev > 0.5) {\r\n                context.navigation.mute.classList.add(context.iconClassName.volumeUp);\r\n            }\r\n            else if(lev < 0.1){\r\n                context.navigation.mute.classList.add(context.iconClassName.volumeOff);\r\n            }\r\n            else if(lev < 0.5){\r\n                context.navigation.mute.classList.add(context.iconClassName.volumeDown);\r\n            }\r\n        }\r\n        \r\n        icon(this.volume);\r\n        this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n        \r\n        this.navigation.volumeBar.addEventListener('mousedown', (e) =>{\r\n            this.volume = ((e.clientX-this.navigation.volumeBar.getBoundingClientRect().x) / this.navigation.volumeBar.offsetWidth);\r\n            \r\n            this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n            this.selector.video.volume = this.volume;\r\n            if (this.selector.video.muted) {\r\n                this.mute();\r\n            }\r\n            icon(this.volume);\r\n\r\n            this.selector.player.addEventListener('mousemove', progressMove);\r\n            this.selector.player.addEventListener('mouseup', progressEnd);\r\n            this.selector.player.addEventListener('mouseleave', progressEnd);\r\n            \r\n        })\r\n        function progressMove(e) {\r\n            context.volume = ((e.clientX-context.navigation.volumeBar.getBoundingClientRect().x) / context.navigation.volumeBar.offsetWidth);\r\n            if (context.volume >= 0 && context.volume <= 1) {\r\n                context.navigation.volumeLevel.style.width = `${context.volume * 100}%`;\r\n                \r\n                context.selector.video.volume = context.volume;\r\n                icon(context.volume);\r\n            }\r\n            else if (context.volume > 1) {\r\n                context.volume = 1;\r\n                context.selector.video.volume = context.volume;\r\n                context.navigation.volumeLevel.style.width = `${context.volume * 100}%`;\r\n                icon(context.volume);\r\n            }\r\n            else{\r\n                context.volume = 0;\r\n                context.selector.video.volume = context.volume;\r\n                context.navigation.volumeLevel.style.width = `${context.volume * 100}%`;\r\n                icon(context.volume);\r\n            }\r\n            \r\n        }\r\n        function progressEnd() {\r\n            \r\n            context.selector.player.removeEventListener('mousemove', progressMove);\r\n            context.selector.player.removeEventListener('mousemove', progressEnd);\r\n            context.selector.player.removeEventListener('mouseleave', progressEnd);\r\n        }\r\n        \r\n        \r\n        this.selector.video.addEventListener('wheel', (e)=>{\r\n            if (document.fullscreenElement) {\r\n                this.volume = this.volume - e.deltaY / 2000;\r\n                \r\n                if (this.volume >= 0 && this.volume <= 1) {\r\n                    this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n                    \r\n                    this.selector.video.volume = this.volume;\r\n                    icon(this.volume);\r\n                }\r\n                else if (this.volume > 1) {\r\n                    this.volume = 1;\r\n                    this.selector.video.volume = this.volume;\r\n                    this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n                    icon(this.volume);\r\n                }\r\n                else{\r\n                    this.volume = 0;\r\n                    this.selector.video.volume = this.volume;\r\n                    this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n                    icon(this.volume);\r\n                }\r\n                \r\n            \r\n            }\r\n        });\r\n        \r\n    }\r\n    speed(btn){\r\n        this.selector.video.playbackRate = btn.getAttribute('speed')\r\n        this.navigation.videoSpeed.forEach((element) =>{\r\n            element.classList.remove(`${this.navigationClassName.videoSpeed}_active`)\r\n        })\r\n        btn.classList.add(`${this.navigationClassName.videoSpeed}_active`);\r\n        \r\n         \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst features__player = new Player(\"player\");\r\n\r\n\r\n}, false);","class Player{\r\n    constructor (option){\r\n        this.selector = {\r\n            player: document.querySelector(`.${option}`),\r\n            video: document.querySelector(`.${option}__video`),\r\n            playerControls: document.querySelector(`.${option}-controls`),\r\n        }\r\n        this.navigationClassName = {\r\n            nav : `${option}__nav`,\r\n            \r\n            play : `${option}-controls__play`,\r\n            centerButton : `${option}__center-btn`,\r\n            screen : `${option}-controls__screen`,\r\n            \r\n            progressBar : `${option}-progress-bar`,\r\n            progressTime : `${option}-progress-bar__time`,\r\n            progressBuffer : `${option}-progress-bar__buffer`,\r\n            \r\n            mute : `${option}-controls__volume-btn`,\r\n            volumeBar:`${option}-controls__volume-bar`,\r\n            volumeLevel:`${option}-controls__volume-bar-progress`,\r\n            \r\n            timeDurationMin : `${option}-time__duration-minute`,\r\n            timeDurationSec : `${option}-time__duration-sec` ,\r\n            timeCurentMin : `${option}-time__curent-minute`,\r\n            timeCurentSec : `${option}-time__curent-sec`,\r\n            \r\n            \r\n            \r\n            setting:`${option}-controls__setting`,\r\n            settingMenu:`${option}-controls__setting-menu`,\r\n            \r\n            videoSpeed:`${option}__speed`,\r\n        }\r\n        \r\n        this.navigation = {\r\n            nav : document.querySelector(`.${this.navigationClassName.nav}`),\r\n            \r\n            play : document.querySelector(`.${this.navigationClassName.play}`),\r\n            \r\n            centerButton : document.querySelector(`.${this.navigationClassName.centerButton}`),\r\n            \r\n            screen : document.querySelector(`.${this.navigationClassName.screen}`),\r\n            \r\n            progressBar : document.querySelector(`.${this.navigationClassName.progressBar}`),\r\n            progressTime : document.querySelector(`.${this.navigationClassName.progressTime}`),\r\n            progressBuffer : document.querySelector(`.${this.navigationClassName.progressBuffer}`),\r\n            \r\n            mute : document.querySelector(`.${this.navigationClassName.mute}`),\r\n            volumeBar : document.querySelector(`.${this.navigationClassName.volumeBar}`),\r\n            volumeLevel : document.querySelector(`.${this.navigationClassName.volumeLevel}`),\r\n            \r\n            timeDurationMin : document.querySelector(`.${this.navigationClassName.timeDurationMin}`),\r\n            timeDurationSec : document.querySelector(`.${this.navigationClassName.timeDurationSec}`),\r\n            timeCurentMin : document.querySelector(`.${this.navigationClassName.timeCurentMin}`),\r\n            timeCurentSec : document.querySelector(`.${this.navigationClassName.timeCurentSec}`),\r\n            \r\n            \r\n            \r\n            setting : document.querySelector(`.${this.navigationClassName.setting}`),\r\n            settingMenu : document.querySelector(`.${this.navigationClassName.settingMenu}`),\r\n            videoSpeed : document.querySelectorAll(`.${this.navigationClassName.videoSpeed}`),\r\n            \r\n        }\r\n        \r\n        this.iconClassName = {\r\n            mainClass: 'fas',\r\n            play: 'fa-play',\r\n            pause: 'fa-pause',\r\n            setting: 'fa-cog',\r\n            fullScreen: 'fa-expand',\r\n            smallScreen: 'fa-compress',\r\n            \r\n            volumeUp: 'fa-volume-up',\r\n            volumeDown: 'fa-volume-down',\r\n            volumeOff: 'fa-volume-off',\r\n            volumeMute: 'fa-volume-mute',\r\n        }\r\n        this.volume = this.selector.video.volume;\r\n        \r\n        this.videoAlready = false;\r\n        this.videoScroll = false;\r\n        this.timer;\r\n        \r\n        this.start();\r\n    }\r\n    \r\n    start(){\r\n        \r\n        /* слушаем нажатие на кнопки   */\r\n        this.selector.player.addEventListener('click', (e) =>{\r\n            \r\n            if (e.target != this.navigation.setting){\r\n                \r\n                this.navigation.settingMenu.classList.remove(`${this.navigationClassName.settingMenu}_active`);\r\n            }\r\n            \r\n            switch (e.target) {\r\n                case this.navigation.play:\r\n                    this.play();\r\n                    break;\r\n                    \r\n                case this.selector.video:\r\n                    this.play();\r\n                    break;\r\n                    \r\n                case this.navigation.centerButton:\r\n                    this.play();\r\n                    break;\r\n                    \r\n                case this.navigation.screen:\r\n                    this.screen();\r\n                    break;\r\n                    \r\n                case this.navigation.mute:\r\n                    this.mute();\r\n                    \r\n                    break;\r\n                case this.navigation.setting:\r\n                    \r\n                    this.navigation.settingMenu.classList.toggle(`${this.navigationClassName.settingMenu}_active`);\r\n                    \r\n                    break;\r\n                    \r\n            \r\n                default:\r\n                    break;\r\n            }\r\n            if (e.target.classList.contains(this.navigationClassName.videoSpeed)) {\r\n                \r\n                this.speed(e.target)\r\n            }\r\n            \r\n        });\r\n        \r\n        /* смена полноэкранного режима */\r\n        this.selector.player.addEventListener(\"fullscreenchange\", (e) =>{\r\n            if (!document.fullscreenElement) {\r\n                this.navigation.screen.classList.remove(this.iconClassName.smallScreen);\r\n                this.navigation.screen.classList.add(this.iconClassName.fullScreen);\r\n                \r\n                document.body.classList.remove('scroll-stop');\r\n            }\r\n            else{\r\n                this.navigation.screen.classList.remove(this.iconClassName.fullScreen);\r\n                this.navigation.screen.classList.add(this.iconClassName.smallScreen);\r\n                \r\n                document.body.classList.add('scroll-stop');\r\n            }\r\n            \r\n        });\r\n        \r\n        /* двойной клик для полноэкранного режима */\r\n        this.selector.video.addEventListener('dblclick', () =>{\r\n            this.screen();\r\n        });\r\n        \r\n        /* работает при возпроизведении */\r\n        this.selector.video.addEventListener('timeupdate', () =>{\r\n            if (!this.videoScroll) {\r\n                this.navigation.progressTime.style.width = `${this.selector.video.currentTime / this.selector.video.duration * 100}%`;\r\n            }\r\n            \r\n\r\n            this.navigation.progressBuffer.style.width = `${this.selector.video.buffered.end(this.selector.video.buffered.length-1) / this.selector.video.duration * 100}%`;\r\n            \r\n            this.navigation.timeCurentMin.innerHTML = Math.floor(this.selector.video.currentTime / 60);\r\n            this.navigation.timeCurentSec.innerHTML = `${Math.floor(this.selector.video.currentTime % 60) < 10 ? '0' : ''}${Math.floor(this.selector.video.currentTime % 60)}`;\r\n            \r\n            this.navigation.timeDurationMin.innerHTML = Math.floor(this.selector.video.duration / 60);\r\n            this.navigation.timeDurationSec.innerHTML = `${Math.floor(this.selector.video.duration % 60) < 10 ? '0' : ''}${Math.floor(this.selector.video.duration % 60)}`;\r\n            \r\n        });\r\n        \r\n        /* работает при загрузке видео данных */\r\n        this.selector.video.addEventListener('progress', () =>{\r\n            if (this.videoAlready) {\r\n                this.navigation.progressBuffer.style.width = `${this.selector.video.buffered.end(this.selector.video.buffered.length-1) / this.selector.video.duration * 100}%`;\r\n                \r\n            }\r\n                \r\n            \r\n            \r\n        });\r\n        \r\n        /* конец видео */\r\n        this.selector.video.addEventListener('ended', () =>{\r\n            this.selector.video.currentTime = 0;\r\n            \r\n            this.navigation.play.classList.remove(this.iconClassName.pause);\r\n            this.navigation.play.classList.add(this.iconClassName.play);\r\n        });\r\n        \r\n        \r\n        /* Движение курсора */\r\n        this.selector.player.addEventListener('mousemove', () =>{\r\n            clearTimeout(this.timer);\r\n            if (!this.navigation.nav.classList.contains(`${this.navigationClassName.nav}_active`) && this.videoAlready) {\r\n                this.navigation.nav.classList.add(`${this.navigationClassName.nav}_active`);\r\n                this.player.style.cursor = 'auto';\r\n                \r\n            }\r\n            if (!this.selector.video.paused && this.navigation.nav.classList.contains(`${this.navigationClassName.nav}_active`)) {\r\n                \r\n                this.timer = setTimeout(() => {\r\n                    \r\n                    this.navigation.nav.classList.remove(`${this.navigationClassName.nav}_active`);\r\n                    \r\n                    this.player.style.cursor = 'none';\r\n                }, 2000);\r\n            }\r\n            \r\n            \r\n        });\r\n        \r\n        \r\n        this.progressBar();\r\n        this.volumeBar();\r\n    }\r\n    play(){\r\n        if (!this.videoAlready) {\r\n            this.navigation.nav.classList.add(`${this.navigationClassName.nav}_active`);\r\n            this.navigation.centerButton.style.display = 'none';\r\n        }\r\n        \r\n        \r\n        this.videoAlready = true;\r\n       if (this.selector.video.paused) {\r\n            this.selector.video.play();\r\n            this.navigation.play.classList.remove(this.iconClassName.play);\r\n            this.navigation.play.classList.add(this.iconClassName.pause);\r\n            \r\n        }\r\n       else{\r\n            this.selector.video.pause();\r\n            this.navigation.play.classList.remove(this.iconClassName.pause);\r\n            this.navigation.play.classList.add(this.iconClassName.play);\r\n            \r\n        }\r\n        \r\n   } \r\n   \r\n   screen(){\r\n        if (!document.fullscreenElement) {\r\n            this.selector.player.requestFullscreen();\r\n        }\r\n        else{\r\n            document.exitFullscreen();\r\n            \r\n        }\r\n         \r\n   }\r\n    mute(){\r\n        this.navigation.mute.classList.remove(this.iconClassName.volumeUp);\r\n        this.navigation.mute.classList.remove(this.iconClassName.volumeDown);\r\n        this.navigation.mute.classList.remove(this.iconClassName.volumeOff);\r\n        this.navigation.mute.classList.remove(this.iconClassName.volumeMute);\r\n        \r\n        if (!this.selector.video.muted) {\r\n            this.selector.video.muted = true;\r\n           \r\n            \r\n            this.navigation.mute.classList.add(this.iconClassName.volumeMute);\r\n            \r\n        }\r\n        else{\r\n            this.selector.video.muted = false;\r\n            \r\n            if (this.volume > 0.5) {\r\n                this.navigation.mute.classList.add(this.iconClassName.volumeUp);\r\n            }\r\n            else if(this.volume < 0.1){\r\n                this.navigation.mute.classList.add(this.iconClassName.volumeOff);\r\n            }\r\n            else if(this.volume < 0.5){\r\n                this.navigation.mute.classList.add(this.iconClassName.volumeDown);\r\n            }\r\n            \r\n        }\r\n        \r\n    }\r\n    \r\n    progressBar(){\r\n        let context = this;\r\n        this.navigation.progressBar.addEventListener('mousedown', progreesStart);\r\n        this.navigation.progressBar.addEventListener('touchstart', progreesStart);\r\n            \r\n            \r\n        function progreesStart(e) {\r\n            context.videoScroll = true;\r\n        \r\n            context.selector.video.currentTime = (((e.clientX || e.changedTouches[0].clientX)-context.navigation.progressBar.getBoundingClientRect().x) / context.navigation.progressBar.offsetWidth * context.selector.video.duration);\r\n            \r\n            context.navigation.progressTime.style.width = `${((e.clientX || e.changedTouches[0].clientX)-context.navigation.progressBar.getBoundingClientRect().x) / context.navigation.progressBar.offsetWidth * 100}%`;\r\n            \r\n            context.selector.player.addEventListener('mousemove', progressMove);\r\n            context.selector.player.addEventListener('mouseup', progressEnd);\r\n            context.selector.player.addEventListener('mouseleave', progressEnd);\r\n            context.selector.player.addEventListener('touchmove', progressMove);\r\n            context.selector.player.addEventListener('touchend', progressEnd);\r\n            context.selector.player.addEventListener('touchcancel', progressEnd);\r\n        }\r\n        \r\n        function progressMove(e) {\r\n            context.selector.video.currentTime = (((e.clientX || e.changedTouches[0].clientX)-context.navigation.progressBar.getBoundingClientRect().x) / context.navigation.progressBar.offsetWidth * context.selector.video.duration);\r\n            \r\n            context.navigation.progressTime.style.width = `${((e.clientX || e.changedTouches[0].clientX)-context.navigation.progressBar.getBoundingClientRect().x) / context.navigation.progressBar.offsetWidth * 100}%`;\r\n        }\r\n        function progressEnd() {\r\n            context.videoScroll = false;\r\n            context.selector.player.removeEventListener('mousemove', progressMove);\r\n            context.selector.player.removeEventListener('mouseup', progressEnd);\r\n            context.selector.player.removeEventListener('mouseleave', progressEnd);\r\n            context.selector.player.removeEventListener('touchmove', progressMove);\r\n            context.selector.player.removeEventListener('touchend', progressEnd);\r\n            context.selector.player.removeEventListener('touchcancel', progressEnd);\r\n        }\r\n        \r\n        \r\n    }\r\n    volumeBar(){\r\n        let context = this;\r\n        \r\n        \r\n        function icon(lev) {\r\n            context.navigation.mute.classList.remove(context.iconClassName.volumeUp);\r\n            context.navigation.mute.classList.remove(context.iconClassName.volumeDown);\r\n            context.navigation.mute.classList.remove(context.iconClassName.volumeOff);\r\n            context.navigation.mute.classList.remove(context.iconClassName.volumeMute);\r\n            if (lev > 0.5) {\r\n                context.navigation.mute.classList.add(context.iconClassName.volumeUp);\r\n            }\r\n            else if(lev < 0.1){\r\n                context.navigation.mute.classList.add(context.iconClassName.volumeOff);\r\n            }\r\n            else if(lev < 0.5){\r\n                context.navigation.mute.classList.add(context.iconClassName.volumeDown);\r\n            }\r\n        }\r\n        \r\n        icon(this.volume);\r\n        this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n        \r\n        this.navigation.volumeBar.addEventListener('mousedown', (e) =>{\r\n            this.volume = ((e.clientX-this.navigation.volumeBar.getBoundingClientRect().x) / this.navigation.volumeBar.offsetWidth);\r\n            \r\n            this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n            this.selector.video.volume = this.volume;\r\n            if (this.selector.video.muted) {\r\n                this.mute();\r\n            }\r\n            icon(this.volume);\r\n\r\n            this.selector.player.addEventListener('mousemove', progressMove);\r\n            this.selector.player.addEventListener('mouseup', progressEnd);\r\n            this.selector.player.addEventListener('mouseleave', progressEnd);\r\n            \r\n        })\r\n        function progressMove(e) {\r\n            context.volume = ((e.clientX-context.navigation.volumeBar.getBoundingClientRect().x) / context.navigation.volumeBar.offsetWidth);\r\n            if (context.volume >= 0 && context.volume <= 1) {\r\n                context.navigation.volumeLevel.style.width = `${context.volume * 100}%`;\r\n                \r\n                context.selector.video.volume = context.volume;\r\n                icon(context.volume);\r\n            }\r\n            else if (context.volume > 1) {\r\n                context.volume = 1;\r\n                context.selector.video.volume = context.volume;\r\n                context.navigation.volumeLevel.style.width = `${context.volume * 100}%`;\r\n                icon(context.volume);\r\n            }\r\n            else{\r\n                context.volume = 0;\r\n                context.selector.video.volume = context.volume;\r\n                context.navigation.volumeLevel.style.width = `${context.volume * 100}%`;\r\n                icon(context.volume);\r\n            }\r\n            \r\n        }\r\n        function progressEnd() {\r\n            \r\n            context.selector.player.removeEventListener('mousemove', progressMove);\r\n            context.selector.player.removeEventListener('mousemove', progressEnd);\r\n            context.selector.player.removeEventListener('mouseleave', progressEnd);\r\n        }\r\n        \r\n        \r\n        this.selector.video.addEventListener('wheel', (e)=>{\r\n            if (document.fullscreenElement) {\r\n                this.volume = this.volume - e.deltaY / 2000;\r\n                \r\n                if (this.volume >= 0 && this.volume <= 1) {\r\n                    this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n                    \r\n                    this.selector.video.volume = this.volume;\r\n                    icon(this.volume);\r\n                }\r\n                else if (this.volume > 1) {\r\n                    this.volume = 1;\r\n                    this.selector.video.volume = this.volume;\r\n                    this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n                    icon(this.volume);\r\n                }\r\n                else{\r\n                    this.volume = 0;\r\n                    this.selector.video.volume = this.volume;\r\n                    this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n                    icon(this.volume);\r\n                }\r\n                \r\n            \r\n            }\r\n        });\r\n        \r\n    }\r\n    speed(btn){\r\n        this.selector.video.playbackRate = btn.getAttribute('speed')\r\n        this.navigation.videoSpeed.forEach((element) =>{\r\n            element.classList.remove(`${this.navigationClassName.videoSpeed}_active`)\r\n        })\r\n        btn.classList.add(`${this.navigationClassName.videoSpeed}_active`);\r\n        \r\n         \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst features__player = new Player(\"player\");\r\n\r\n"]}