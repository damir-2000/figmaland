{"version":3,"sources":["main.js","components/player.js"],"names":["document","addEventListener","Player","option","selector","player","querySelector","video","playerControls","navigationClassName","nav","play","screen","progressBar","progressTime","progressBuffer","mute","volumeBar","volumeLevel","timeDurationMin","timeDurationSec","timeCurentMin","timeCurentSec","setting","settingMenu","videoSpeed","navigation","querySelectorAll","iconClassName","mainClass","pause","fullScreen","smallScreen","volumeUp","volumeDown","volumeOff","volumeMute","volume","videoAlready","videoScroll","timer","start","e","classList","contains","remove","target","add","speed","fullscreenElement","body","style","width","currentTime","duration","buffered","end","length","innerHTML","Math","floor","clearTimeout","paused","exitFullscreen","requestFullscreen","muted","progressMove","context","clientX","getBoundingClientRect","x","offsetWidth","progressEnd","removeEventListener","icon","lev","deltaY","btn","playbackRate","getAttribute","forEach","element","features__player"],"mappings":"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","file":"main.min.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\r\n// // =include components/img.js\r\n// // =include components/header-menu.js\r\nclass Player{\r\n    constructor (option){\r\n        this.selector = {\r\n            player: document.querySelector(`.${option}`),\r\n            video: document.querySelector(`.${option}__video`),\r\n            playerControls: document.querySelector(`.${option}-controls`),\r\n        }\r\n        this.navigationClassName = {\r\n            nav : `${option}__nav`,\r\n            \r\n            play : `${option}-controls__play`,\r\n            screen : `${option}-controls__screen`,\r\n            \r\n            progressBar : `${option}-progress-bar`,\r\n            progressTime : `${option}-progress-bar__time`,\r\n            progressBuffer : `${option}-progress-bar__buffer`,\r\n            \r\n            mute : `${option}-controls__volume-btn`,\r\n            volumeBar:`${option}-controls__volume-bar`,\r\n            volumeLevel:`${option}-controls__volume-bar-progress`,\r\n            \r\n            timeDurationMin : `${option}-time__duration-minute`,\r\n            timeDurationSec : `${option}-time__duration-sec` ,\r\n            timeCurentMin : `${option}-time__curent-minute`,\r\n            timeCurentSec : `${option}-time__curent-sec`,\r\n            \r\n            \r\n            \r\n            setting:`${option}-controls__setting`,\r\n            settingMenu:`${option}-controls__setting-menu`,\r\n            \r\n            videoSpeed:`${option}__speed`,\r\n        }\r\n        \r\n        this.navigation = {\r\n            nav : document.querySelector(`.${this.navigationClassName.nav}`),\r\n            \r\n            play : document.querySelector(`.${this.navigationClassName.play}`),\r\n            screen : document.querySelector(`.${this.navigationClassName.screen}`),\r\n            \r\n            progressBar : document.querySelector(`.${this.navigationClassName.progressBar}`),\r\n            progressTime : document.querySelector(`.${this.navigationClassName.progressTime}`),\r\n            progressBuffer : document.querySelector(`.${this.navigationClassName.progressBuffer}`),\r\n            \r\n            mute : document.querySelector(`.${this.navigationClassName.mute}`),\r\n            volumeBar : document.querySelector(`.${this.navigationClassName.volumeBar}`),\r\n            volumeLevel : document.querySelector(`.${this.navigationClassName.volumeLevel}`),\r\n            \r\n            timeDurationMin : document.querySelector(`.${this.navigationClassName.timeDurationMin}`),\r\n            timeDurationSec : document.querySelector(`.${this.navigationClassName.timeDurationSec}`),\r\n            timeCurentMin : document.querySelector(`.${this.navigationClassName.timeCurentMin}`),\r\n            timeCurentSec : document.querySelector(`.${this.navigationClassName.timeCurentSec}`),\r\n            \r\n            \r\n            \r\n            setting : document.querySelector(`.${this.navigationClassName.setting}`),\r\n            settingMenu : document.querySelector(`.${this.navigationClassName.settingMenu}`),\r\n            videoSpeed : document.querySelectorAll(`.${this.navigationClassName.videoSpeed}`),\r\n            \r\n        }\r\n        \r\n        this.iconClassName = {\r\n            mainClass: 'fas',\r\n            play: 'fa-play',\r\n            pause: 'fa-pause',\r\n            setting: 'fa-cog',\r\n            fullScreen: 'fa-expand',\r\n            smallScreen: 'fa-compress',\r\n            \r\n            volumeUp: 'fa-volume-up',\r\n            volumeDown: 'fa-volume-down',\r\n            volumeOff: 'fa-volume-off',\r\n            volumeMute: 'fa-volume-mute',\r\n        }\r\n        this.volume = this.selector.video.volume;\r\n        \r\n        this.videoAlready = false;\r\n        this.videoScroll = false;\r\n        this.timer;\r\n        \r\n        this.start();\r\n    }\r\n    \r\n    start(){\r\n        \r\n        /* слушаем нажатие на кнопки   */\r\n        this.selector.player.addEventListener('click', (e) =>{\r\n            if (this.navigation.settingMenu.classList.contains(`${this.navigationClassName.settingMenu}_active`)) {\r\n                this.navigation.settingMenu.classList.remove(`${this.navigationClassName.settingMenu}_active`);\r\n            }\r\n            \r\n            switch (e.target) {\r\n                case this.navigation.play:\r\n                    this.play();\r\n                    break;\r\n                    \r\n                case this.selector.video:\r\n                    this.play();\r\n                    break;\r\n                    \r\n                case this.navigation.screen:\r\n                    this.screen();\r\n                    break;\r\n                    \r\n                case this.navigation.mute:\r\n                    this.mute();\r\n                    \r\n                    break;\r\n                case this.navigation.setting:\r\n                    if (!this.navigation.settingMenu.classList.contains(`${this.navigationClassName.settingMenu}_active`)) {\r\n                        this.navigation.settingMenu.classList.add(`${this.navigationClassName.settingMenu}_active`);\r\n                    }\r\n                    \r\n                    break;\r\n                    \r\n            \r\n                default:\r\n                    break;\r\n            }\r\n            if (e.target.classList.contains(this.navigationClassName.videoSpeed)) {\r\n                \r\n                this.speed(e.target)\r\n            }\r\n            \r\n        });\r\n        \r\n        /* смена полноэкранного режима */\r\n        this.selector.player.addEventListener(\"fullscreenchange\", (e) =>{\r\n            if (!document.fullscreenElement) {\r\n                this.navigation.screen.classList.remove(this.iconClassName.smallScreen);\r\n                this.navigation.screen.classList.add(this.iconClassName.fullScreen);\r\n                \r\n                document.body.classList.remove('scroll-stop');\r\n            }\r\n            else{\r\n                this.navigation.screen.classList.remove(this.iconClassName.fullScreen);\r\n                this.navigation.screen.classList.add(this.iconClassName.smallScreen);\r\n                \r\n                document.body.classList.add('scroll-stop');\r\n            }\r\n            \r\n        });\r\n        \r\n        /* двойной клик для полноэкранного режима */\r\n        this.selector.video.addEventListener('dblclick', () =>{\r\n            this.screen();\r\n        });\r\n        \r\n        /* работает при возпроизведении */\r\n        this.selector.video.addEventListener('timeupdate', () =>{\r\n            if (!this.videoScroll) {\r\n                this.navigation.progressTime.style.width = `${this.selector.video.currentTime / this.selector.video.duration * 100}%`;\r\n            }\r\n            \r\n\r\n            this.navigation.progressBuffer.style.width = `${this.selector.video.buffered.end(this.selector.video.buffered.length-1) / this.selector.video.duration * 100}%`;\r\n            \r\n            this.navigation.timeCurentMin.innerHTML = Math.floor(this.selector.video.currentTime / 60);\r\n            this.navigation.timeCurentSec.innerHTML = `${Math.floor(this.selector.video.currentTime % 60) < 10 ? '0' : ''}${Math.floor(this.selector.video.currentTime % 60)}`;\r\n            \r\n            this.navigation.timeDurationMin.innerHTML = Math.floor(this.selector.video.duration / 60);\r\n            this.navigation.timeDurationSec.innerHTML = `${Math.floor(this.selector.video.duration % 60) < 10 ? '0' : ''}${Math.floor(this.selector.video.duration % 60)}`;\r\n            \r\n        });\r\n        \r\n        /* работает при загрузке видео данных */\r\n        this.selector.video.addEventListener('progress', () =>{\r\n            if (this.videoAlready) {\r\n                this.navigation.progressBuffer.style.width = `${this.selector.video.buffered.end(this.selector.video.buffered.length-1) / this.selector.video.duration * 100}%`;\r\n                \r\n            }\r\n                \r\n            \r\n            \r\n        });\r\n        \r\n        /* конец видео */\r\n        this.selector.video.addEventListener('ended', () =>{\r\n            this.selector.video.currentTime = 0;\r\n            \r\n            this.navigation.play.classList.remove(this.iconClassName.pause);\r\n            this.navigation.play.classList.add(this.iconClassName.play);\r\n        });\r\n        \r\n        \r\n        /* Движение курсора */\r\n        this.selector.player.addEventListener('mousemove', () =>{\r\n           clearTimeout(this.timer);\r\n           \r\n            // if (!this.navigation.nav.contains(`${this.navigationClassName.nav}_class`)) {\r\n            //     this.navigation.nav.add(`${this.navigationClassName.nav}_class`);\r\n                \r\n            // }\r\n            // if (!this.selector.video.paused && this.navigation.nav.contains(`${this.navigationClassName.nav}_class`)) {\r\n                \r\n            //     this.timer = setTimeout(() => {\r\n                    \r\n            //         this.navigation.nav.remove(`${this.navigationClassName.nav}_class`);\r\n            //     }, 2000);\r\n            // }\r\n            \r\n            \r\n        });\r\n        \r\n        \r\n        this.progressBar();\r\n        this.volumeBar();\r\n    }\r\n    play(){\r\n        this.videoAlready = true;\r\n       if (this.selector.video.paused) {\r\n            this.selector.video.play();\r\n            this.navigation.play.classList.remove(this.iconClassName.play);\r\n            this.navigation.play.classList.add(this.iconClassName.pause);\r\n            \r\n        }\r\n       else{\r\n            this.selector.video.pause();\r\n            this.navigation.play.classList.remove(this.iconClassName.pause);\r\n            this.navigation.play.classList.add(this.iconClassName.play);\r\n            \r\n        }\r\n        \r\n   } \r\n   \r\n   screen(){\r\n        if (!document.fullscreenElement) {\r\n            this.selector.player.requestFullscreen();\r\n        }\r\n        else{\r\n            document.exitFullscreen();\r\n            \r\n        }\r\n         \r\n   }\r\n    mute(){\r\n        this.navigation.mute.classList.remove(this.iconClassName.volumeUp);\r\n        this.navigation.mute.classList.remove(this.iconClassName.volumeDown);\r\n        this.navigation.mute.classList.remove(this.iconClassName.volumeOff);\r\n        this.navigation.mute.classList.remove(this.iconClassName.volumeMute);\r\n        \r\n        if (!this.selector.video.muted) {\r\n            this.selector.video.muted = true;\r\n           \r\n            \r\n            this.navigation.mute.classList.add(this.iconClassName.volumeMute);\r\n            \r\n        }\r\n        else{\r\n            this.selector.video.muted = false;\r\n            \r\n            if (this.volume > 0.5) {\r\n                this.navigation.mute.classList.add(this.iconClassName.volumeUp);\r\n            }\r\n            else if(this.volume < 0.1){\r\n                this.navigation.mute.classList.add(this.iconClassName.volumeOff);\r\n            }\r\n            else if(this.volume < 0.5){\r\n                this.navigation.mute.classList.add(this.iconClassName.volumeDown);\r\n            }\r\n            \r\n        }\r\n        \r\n    }\r\n    \r\n    progressBar(){\r\n        let context = this;\r\n        this.navigation.progressBar.addEventListener('mousedown', (e) =>{\r\n            this.videoScroll = true;\r\n            \r\n            this.selector.video.currentTime = ((e.clientX-this.navigation.progressBar.getBoundingClientRect().x) / this.navigation.progressBar.offsetWidth * this.selector.video.duration);\r\n            \r\n            this.navigation.progressTime.style.width = `${(e.clientX-this.navigation.progressBar.getBoundingClientRect().x) / this.navigation.progressBar.offsetWidth * 100}%`;\r\n            \r\n            this.selector.player.addEventListener('mousemove', progressMove);\r\n            this.selector.player.addEventListener('mouseup', progressEnd);\r\n            this.selector.player.addEventListener('mouseleave', progressEnd);\r\n            \r\n            \r\n            \r\n        })\r\n        function progressMove(e) {\r\n            context.selector.video.currentTime = ((e.clientX-context.navigation.progressBar.getBoundingClientRect().x) / context.navigation.progressBar.offsetWidth * context.selector.video.duration);\r\n            \r\n            context.navigation.progressTime.style.width = `${(e.clientX-context.navigation.progressBar.getBoundingClientRect().x) / context.navigation.progressBar.offsetWidth * 100}%`;\r\n        }\r\n        function progressEnd() {\r\n            context.videoScroll = false;\r\n            context.selector.player.removeEventListener('mousemove', progressMove);\r\n            context.selector.player.removeEventListener('mouseup', progressEnd);\r\n            context.selector.player.removeEventListener('mouseleave', progressEnd);\r\n        }\r\n        \r\n        \r\n    }\r\n    volumeBar(){\r\n        let context = this;\r\n        \r\n        \r\n        function icon(lev) {\r\n            context.navigation.mute.classList.remove(context.iconClassName.volumeUp);\r\n            context.navigation.mute.classList.remove(context.iconClassName.volumeDown);\r\n            context.navigation.mute.classList.remove(context.iconClassName.volumeOff);\r\n            context.navigation.mute.classList.remove(context.iconClassName.volumeMute);\r\n            if (lev > 0.5) {\r\n                context.navigation.mute.classList.add(context.iconClassName.volumeUp);\r\n            }\r\n            else if(lev < 0.1){\r\n                context.navigation.mute.classList.add(context.iconClassName.volumeOff);\r\n            }\r\n            else if(lev < 0.5){\r\n                context.navigation.mute.classList.add(context.iconClassName.volumeDown);\r\n            }\r\n        }\r\n        \r\n        icon(this.volume);\r\n        this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n        \r\n        this.navigation.volumeBar.addEventListener('mousedown', (e) =>{\r\n            this.volume = ((e.clientX-this.navigation.volumeBar.getBoundingClientRect().x) / this.navigation.volumeBar.offsetWidth);\r\n            \r\n            this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n            this.selector.video.volume = this.volume;\r\n            if (this.selector.video.muted) {\r\n                this.mute();\r\n            }\r\n            icon(this.volume);\r\n\r\n            this.selector.player.addEventListener('mousemove', progressMove);\r\n            this.selector.player.addEventListener('mouseup', progressEnd);\r\n            this.selector.player.addEventListener('mouseleave', progressEnd);\r\n            \r\n        })\r\n        function progressMove(e) {\r\n            context.volume = ((e.clientX-context.navigation.volumeBar.getBoundingClientRect().x) / context.navigation.volumeBar.offsetWidth);\r\n            if (context.volume >= 0 && context.volume <= 1) {\r\n                context.navigation.volumeLevel.style.width = `${context.volume * 100}%`;\r\n                \r\n                context.selector.video.volume = context.volume;\r\n                icon(context.volume);\r\n            }\r\n            else if (context.volume > 1) {\r\n                context.volume = 1;\r\n                context.selector.video.volume = context.volume;\r\n                context.navigation.volumeLevel.style.width = `${context.volume * 100}%`;\r\n                icon(context.volume);\r\n            }\r\n            else{\r\n                context.volume = 0;\r\n                context.selector.video.volume = context.volume;\r\n                context.navigation.volumeLevel.style.width = `${context.volume * 100}%`;\r\n                icon(context.volume);\r\n            }\r\n            \r\n        }\r\n        function progressEnd() {\r\n            \r\n            context.selector.player.removeEventListener('mousemove', progressMove);\r\n            context.selector.player.removeEventListener('mousemove', progressEnd);\r\n            context.selector.player.removeEventListener('mouseleave', progressEnd);\r\n        }\r\n        \r\n        \r\n        this.selector.video.addEventListener('wheel', (e)=>{\r\n            if (document.fullscreenElement) {\r\n                this.volume = this.volume - e.deltaY / 2000;\r\n                \r\n                if (this.volume >= 0 && this.volume <= 1) {\r\n                    this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n                    \r\n                    this.selector.video.volume = this.volume;\r\n                    icon(this.volume);\r\n                }\r\n                else if (this.volume > 1) {\r\n                    this.volume = 1;\r\n                    this.selector.video.volume = this.volume;\r\n                    this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n                    icon(this.volume);\r\n                }\r\n                else{\r\n                    this.volume = 0;\r\n                    this.selector.video.volume = this.volume;\r\n                    this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n                    icon(this.volume);\r\n                }\r\n                \r\n            \r\n            }\r\n        });\r\n        \r\n    }\r\n    speed(btn){\r\n        this.selector.video.playbackRate = btn.getAttribute('speed')\r\n        this.navigation.videoSpeed.forEach((element) =>{\r\n            element.classList.remove(`${this.navigationClassName.videoSpeed}_active`)\r\n        })\r\n        btn.classList.add(`${this.navigationClassName.videoSpeed}_active`);\r\n        \r\n         \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst features__player = new Player(\"player\");\r\n\r\n\r\n}, false);","class Player{\r\n    constructor (option){\r\n        this.selector = {\r\n            player: document.querySelector(`.${option}`),\r\n            video: document.querySelector(`.${option}__video`),\r\n            playerControls: document.querySelector(`.${option}-controls`),\r\n        }\r\n        this.navigationClassName = {\r\n            nav : `${option}__nav`,\r\n            \r\n            play : `${option}-controls__play`,\r\n            screen : `${option}-controls__screen`,\r\n            \r\n            progressBar : `${option}-progress-bar`,\r\n            progressTime : `${option}-progress-bar__time`,\r\n            progressBuffer : `${option}-progress-bar__buffer`,\r\n            \r\n            mute : `${option}-controls__volume-btn`,\r\n            volumeBar:`${option}-controls__volume-bar`,\r\n            volumeLevel:`${option}-controls__volume-bar-progress`,\r\n            \r\n            timeDurationMin : `${option}-time__duration-minute`,\r\n            timeDurationSec : `${option}-time__duration-sec` ,\r\n            timeCurentMin : `${option}-time__curent-minute`,\r\n            timeCurentSec : `${option}-time__curent-sec`,\r\n            \r\n            \r\n            \r\n            setting:`${option}-controls__setting`,\r\n            settingMenu:`${option}-controls__setting-menu`,\r\n            \r\n            videoSpeed:`${option}__speed`,\r\n        }\r\n        \r\n        this.navigation = {\r\n            nav : document.querySelector(`.${this.navigationClassName.nav}`),\r\n            \r\n            play : document.querySelector(`.${this.navigationClassName.play}`),\r\n            screen : document.querySelector(`.${this.navigationClassName.screen}`),\r\n            \r\n            progressBar : document.querySelector(`.${this.navigationClassName.progressBar}`),\r\n            progressTime : document.querySelector(`.${this.navigationClassName.progressTime}`),\r\n            progressBuffer : document.querySelector(`.${this.navigationClassName.progressBuffer}`),\r\n            \r\n            mute : document.querySelector(`.${this.navigationClassName.mute}`),\r\n            volumeBar : document.querySelector(`.${this.navigationClassName.volumeBar}`),\r\n            volumeLevel : document.querySelector(`.${this.navigationClassName.volumeLevel}`),\r\n            \r\n            timeDurationMin : document.querySelector(`.${this.navigationClassName.timeDurationMin}`),\r\n            timeDurationSec : document.querySelector(`.${this.navigationClassName.timeDurationSec}`),\r\n            timeCurentMin : document.querySelector(`.${this.navigationClassName.timeCurentMin}`),\r\n            timeCurentSec : document.querySelector(`.${this.navigationClassName.timeCurentSec}`),\r\n            \r\n            \r\n            \r\n            setting : document.querySelector(`.${this.navigationClassName.setting}`),\r\n            settingMenu : document.querySelector(`.${this.navigationClassName.settingMenu}`),\r\n            videoSpeed : document.querySelectorAll(`.${this.navigationClassName.videoSpeed}`),\r\n            \r\n        }\r\n        \r\n        this.iconClassName = {\r\n            mainClass: 'fas',\r\n            play: 'fa-play',\r\n            pause: 'fa-pause',\r\n            setting: 'fa-cog',\r\n            fullScreen: 'fa-expand',\r\n            smallScreen: 'fa-compress',\r\n            \r\n            volumeUp: 'fa-volume-up',\r\n            volumeDown: 'fa-volume-down',\r\n            volumeOff: 'fa-volume-off',\r\n            volumeMute: 'fa-volume-mute',\r\n        }\r\n        this.volume = this.selector.video.volume;\r\n        \r\n        this.videoAlready = false;\r\n        this.videoScroll = false;\r\n        this.timer;\r\n        \r\n        this.start();\r\n    }\r\n    \r\n    start(){\r\n        \r\n        /* слушаем нажатие на кнопки   */\r\n        this.selector.player.addEventListener('click', (e) =>{\r\n            if (this.navigation.settingMenu.classList.contains(`${this.navigationClassName.settingMenu}_active`)) {\r\n                this.navigation.settingMenu.classList.remove(`${this.navigationClassName.settingMenu}_active`);\r\n            }\r\n            \r\n            switch (e.target) {\r\n                case this.navigation.play:\r\n                    this.play();\r\n                    break;\r\n                    \r\n                case this.selector.video:\r\n                    this.play();\r\n                    break;\r\n                    \r\n                case this.navigation.screen:\r\n                    this.screen();\r\n                    break;\r\n                    \r\n                case this.navigation.mute:\r\n                    this.mute();\r\n                    \r\n                    break;\r\n                case this.navigation.setting:\r\n                    if (!this.navigation.settingMenu.classList.contains(`${this.navigationClassName.settingMenu}_active`)) {\r\n                        this.navigation.settingMenu.classList.add(`${this.navigationClassName.settingMenu}_active`);\r\n                    }\r\n                    \r\n                    break;\r\n                    \r\n            \r\n                default:\r\n                    break;\r\n            }\r\n            if (e.target.classList.contains(this.navigationClassName.videoSpeed)) {\r\n                \r\n                this.speed(e.target)\r\n            }\r\n            \r\n        });\r\n        \r\n        /* смена полноэкранного режима */\r\n        this.selector.player.addEventListener(\"fullscreenchange\", (e) =>{\r\n            if (!document.fullscreenElement) {\r\n                this.navigation.screen.classList.remove(this.iconClassName.smallScreen);\r\n                this.navigation.screen.classList.add(this.iconClassName.fullScreen);\r\n                \r\n                document.body.classList.remove('scroll-stop');\r\n            }\r\n            else{\r\n                this.navigation.screen.classList.remove(this.iconClassName.fullScreen);\r\n                this.navigation.screen.classList.add(this.iconClassName.smallScreen);\r\n                \r\n                document.body.classList.add('scroll-stop');\r\n            }\r\n            \r\n        });\r\n        \r\n        /* двойной клик для полноэкранного режима */\r\n        this.selector.video.addEventListener('dblclick', () =>{\r\n            this.screen();\r\n        });\r\n        \r\n        /* работает при возпроизведении */\r\n        this.selector.video.addEventListener('timeupdate', () =>{\r\n            if (!this.videoScroll) {\r\n                this.navigation.progressTime.style.width = `${this.selector.video.currentTime / this.selector.video.duration * 100}%`;\r\n            }\r\n            \r\n\r\n            this.navigation.progressBuffer.style.width = `${this.selector.video.buffered.end(this.selector.video.buffered.length-1) / this.selector.video.duration * 100}%`;\r\n            \r\n            this.navigation.timeCurentMin.innerHTML = Math.floor(this.selector.video.currentTime / 60);\r\n            this.navigation.timeCurentSec.innerHTML = `${Math.floor(this.selector.video.currentTime % 60) < 10 ? '0' : ''}${Math.floor(this.selector.video.currentTime % 60)}`;\r\n            \r\n            this.navigation.timeDurationMin.innerHTML = Math.floor(this.selector.video.duration / 60);\r\n            this.navigation.timeDurationSec.innerHTML = `${Math.floor(this.selector.video.duration % 60) < 10 ? '0' : ''}${Math.floor(this.selector.video.duration % 60)}`;\r\n            \r\n        });\r\n        \r\n        /* работает при загрузке видео данных */\r\n        this.selector.video.addEventListener('progress', () =>{\r\n            if (this.videoAlready) {\r\n                this.navigation.progressBuffer.style.width = `${this.selector.video.buffered.end(this.selector.video.buffered.length-1) / this.selector.video.duration * 100}%`;\r\n                \r\n            }\r\n                \r\n            \r\n            \r\n        });\r\n        \r\n        /* конец видео */\r\n        this.selector.video.addEventListener('ended', () =>{\r\n            this.selector.video.currentTime = 0;\r\n            \r\n            this.navigation.play.classList.remove(this.iconClassName.pause);\r\n            this.navigation.play.classList.add(this.iconClassName.play);\r\n        });\r\n        \r\n        \r\n        /* Движение курсора */\r\n        this.selector.player.addEventListener('mousemove', () =>{\r\n           clearTimeout(this.timer);\r\n           \r\n            // if (!this.navigation.nav.contains(`${this.navigationClassName.nav}_class`)) {\r\n            //     this.navigation.nav.add(`${this.navigationClassName.nav}_class`);\r\n                \r\n            // }\r\n            // if (!this.selector.video.paused && this.navigation.nav.contains(`${this.navigationClassName.nav}_class`)) {\r\n                \r\n            //     this.timer = setTimeout(() => {\r\n                    \r\n            //         this.navigation.nav.remove(`${this.navigationClassName.nav}_class`);\r\n            //     }, 2000);\r\n            // }\r\n            \r\n            \r\n        });\r\n        \r\n        \r\n        this.progressBar();\r\n        this.volumeBar();\r\n    }\r\n    play(){\r\n        this.videoAlready = true;\r\n       if (this.selector.video.paused) {\r\n            this.selector.video.play();\r\n            this.navigation.play.classList.remove(this.iconClassName.play);\r\n            this.navigation.play.classList.add(this.iconClassName.pause);\r\n            \r\n        }\r\n       else{\r\n            this.selector.video.pause();\r\n            this.navigation.play.classList.remove(this.iconClassName.pause);\r\n            this.navigation.play.classList.add(this.iconClassName.play);\r\n            \r\n        }\r\n        \r\n   } \r\n   \r\n   screen(){\r\n        if (!document.fullscreenElement) {\r\n            this.selector.player.requestFullscreen();\r\n        }\r\n        else{\r\n            document.exitFullscreen();\r\n            \r\n        }\r\n         \r\n   }\r\n    mute(){\r\n        this.navigation.mute.classList.remove(this.iconClassName.volumeUp);\r\n        this.navigation.mute.classList.remove(this.iconClassName.volumeDown);\r\n        this.navigation.mute.classList.remove(this.iconClassName.volumeOff);\r\n        this.navigation.mute.classList.remove(this.iconClassName.volumeMute);\r\n        \r\n        if (!this.selector.video.muted) {\r\n            this.selector.video.muted = true;\r\n           \r\n            \r\n            this.navigation.mute.classList.add(this.iconClassName.volumeMute);\r\n            \r\n        }\r\n        else{\r\n            this.selector.video.muted = false;\r\n            \r\n            if (this.volume > 0.5) {\r\n                this.navigation.mute.classList.add(this.iconClassName.volumeUp);\r\n            }\r\n            else if(this.volume < 0.1){\r\n                this.navigation.mute.classList.add(this.iconClassName.volumeOff);\r\n            }\r\n            else if(this.volume < 0.5){\r\n                this.navigation.mute.classList.add(this.iconClassName.volumeDown);\r\n            }\r\n            \r\n        }\r\n        \r\n    }\r\n    \r\n    progressBar(){\r\n        let context = this;\r\n        this.navigation.progressBar.addEventListener('mousedown', (e) =>{\r\n            this.videoScroll = true;\r\n            \r\n            this.selector.video.currentTime = ((e.clientX-this.navigation.progressBar.getBoundingClientRect().x) / this.navigation.progressBar.offsetWidth * this.selector.video.duration);\r\n            \r\n            this.navigation.progressTime.style.width = `${(e.clientX-this.navigation.progressBar.getBoundingClientRect().x) / this.navigation.progressBar.offsetWidth * 100}%`;\r\n            \r\n            this.selector.player.addEventListener('mousemove', progressMove);\r\n            this.selector.player.addEventListener('mouseup', progressEnd);\r\n            this.selector.player.addEventListener('mouseleave', progressEnd);\r\n            \r\n            \r\n            \r\n        })\r\n        function progressMove(e) {\r\n            context.selector.video.currentTime = ((e.clientX-context.navigation.progressBar.getBoundingClientRect().x) / context.navigation.progressBar.offsetWidth * context.selector.video.duration);\r\n            \r\n            context.navigation.progressTime.style.width = `${(e.clientX-context.navigation.progressBar.getBoundingClientRect().x) / context.navigation.progressBar.offsetWidth * 100}%`;\r\n        }\r\n        function progressEnd() {\r\n            context.videoScroll = false;\r\n            context.selector.player.removeEventListener('mousemove', progressMove);\r\n            context.selector.player.removeEventListener('mouseup', progressEnd);\r\n            context.selector.player.removeEventListener('mouseleave', progressEnd);\r\n        }\r\n        \r\n        \r\n    }\r\n    volumeBar(){\r\n        let context = this;\r\n        \r\n        \r\n        function icon(lev) {\r\n            context.navigation.mute.classList.remove(context.iconClassName.volumeUp);\r\n            context.navigation.mute.classList.remove(context.iconClassName.volumeDown);\r\n            context.navigation.mute.classList.remove(context.iconClassName.volumeOff);\r\n            context.navigation.mute.classList.remove(context.iconClassName.volumeMute);\r\n            if (lev > 0.5) {\r\n                context.navigation.mute.classList.add(context.iconClassName.volumeUp);\r\n            }\r\n            else if(lev < 0.1){\r\n                context.navigation.mute.classList.add(context.iconClassName.volumeOff);\r\n            }\r\n            else if(lev < 0.5){\r\n                context.navigation.mute.classList.add(context.iconClassName.volumeDown);\r\n            }\r\n        }\r\n        \r\n        icon(this.volume);\r\n        this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n        \r\n        this.navigation.volumeBar.addEventListener('mousedown', (e) =>{\r\n            this.volume = ((e.clientX-this.navigation.volumeBar.getBoundingClientRect().x) / this.navigation.volumeBar.offsetWidth);\r\n            \r\n            this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n            this.selector.video.volume = this.volume;\r\n            if (this.selector.video.muted) {\r\n                this.mute();\r\n            }\r\n            icon(this.volume);\r\n\r\n            this.selector.player.addEventListener('mousemove', progressMove);\r\n            this.selector.player.addEventListener('mouseup', progressEnd);\r\n            this.selector.player.addEventListener('mouseleave', progressEnd);\r\n            \r\n        })\r\n        function progressMove(e) {\r\n            context.volume = ((e.clientX-context.navigation.volumeBar.getBoundingClientRect().x) / context.navigation.volumeBar.offsetWidth);\r\n            if (context.volume >= 0 && context.volume <= 1) {\r\n                context.navigation.volumeLevel.style.width = `${context.volume * 100}%`;\r\n                \r\n                context.selector.video.volume = context.volume;\r\n                icon(context.volume);\r\n            }\r\n            else if (context.volume > 1) {\r\n                context.volume = 1;\r\n                context.selector.video.volume = context.volume;\r\n                context.navigation.volumeLevel.style.width = `${context.volume * 100}%`;\r\n                icon(context.volume);\r\n            }\r\n            else{\r\n                context.volume = 0;\r\n                context.selector.video.volume = context.volume;\r\n                context.navigation.volumeLevel.style.width = `${context.volume * 100}%`;\r\n                icon(context.volume);\r\n            }\r\n            \r\n        }\r\n        function progressEnd() {\r\n            \r\n            context.selector.player.removeEventListener('mousemove', progressMove);\r\n            context.selector.player.removeEventListener('mousemove', progressEnd);\r\n            context.selector.player.removeEventListener('mouseleave', progressEnd);\r\n        }\r\n        \r\n        \r\n        this.selector.video.addEventListener('wheel', (e)=>{\r\n            if (document.fullscreenElement) {\r\n                this.volume = this.volume - e.deltaY / 2000;\r\n                \r\n                if (this.volume >= 0 && this.volume <= 1) {\r\n                    this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n                    \r\n                    this.selector.video.volume = this.volume;\r\n                    icon(this.volume);\r\n                }\r\n                else if (this.volume > 1) {\r\n                    this.volume = 1;\r\n                    this.selector.video.volume = this.volume;\r\n                    this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n                    icon(this.volume);\r\n                }\r\n                else{\r\n                    this.volume = 0;\r\n                    this.selector.video.volume = this.volume;\r\n                    this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n                    icon(this.volume);\r\n                }\r\n                \r\n            \r\n            }\r\n        });\r\n        \r\n    }\r\n    speed(btn){\r\n        this.selector.video.playbackRate = btn.getAttribute('speed')\r\n        this.navigation.videoSpeed.forEach((element) =>{\r\n            element.classList.remove(`${this.navigationClassName.videoSpeed}_active`)\r\n        })\r\n        btn.classList.add(`${this.navigationClassName.videoSpeed}_active`);\r\n        \r\n         \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst features__player = new Player(\"player\");\r\n\r\n"]}