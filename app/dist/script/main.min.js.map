{"version":3,"sources":["main.js","components/player.js","components/header-menu.js"],"names":["document","addEventListener","media","e","matches","colLeft","prepend","colTitle","colRight","querySelector","classList","toggle","navbar","navbarActive","speed","window","topSectionHeight","offsetHeight","scrollY","add","style","opacity","position","animate","duration","setTimeout","remove","Player","option","selector","player","video","playerControls","navigationClassName","nav","play","centerButton","screen","progressBar","progressTime","progressBuffer","mute","volumeBar","volumeLevel","timeDurationMin","timeDurationSec","timeCurentMin","timeCurentSec","setting","settingMenu","videoSpeed","loader","navigation","querySelectorAll","iconClassName","mainClass","pause","fullScreen","smallScreen","volumeUp","volumeDown","volumeOff","volumeMute","volume","videoAlready","videoScroll","timer","start","target","contains","fullscreenElement","body","width","currentTime","buffered","end","length","innerHTML","Math","floor","clearTimeout","cursor","paused","display","exitFullscreen","requestFullscreen","muted","progreesStart","context","clientX","changedTouches","getBoundingClientRect","x","offsetWidth","progressMove","progressEnd","removeEventListener","icon","lev","deltaY","btn","playbackRate","getAttribute","forEach","element","features__player","mediaNotebook","matchMedia","addListener"],"mappings":"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","file":"main.min.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\r\n// // =include components/img.js\r\ndocument.querySelector('.navbar__burger').addEventListener('click', function () {\r\n    this.classList.toggle('navbar__burger_active');\r\n    document.querySelector('.navbar__sidebar').classList.toggle('navbar__sidebar_active');\r\n    document.querySelector('.navbar').classList.toggle('navbar_active');\r\n    document.querySelector('body').classList.toggle('inactive');\r\n    \r\n});\r\n\r\n\r\n\r\nlet navbar = document.querySelector('.header');\r\nlet navbarActive = false;\r\nlet speed = 300;\r\nwindow.addEventListener('scroll', function(e) {\r\n    \r\n    let topSectionHeight = document.querySelector('.start').offsetHeight;\r\n    if (window.scrollY > topSectionHeight - navbar.offsetHeight && !navbarActive) {\r\n        navbarActive = true;\r\n        navbar.classList.add('header_active');\r\n        navbar.style.opacity = 0;\r\n        navbar.style.position = 'fixed';\r\n        navbar.animate([\r\n            {opacity: '0'},\r\n            {opacity: '1'},\r\n        ],\r\n            {\r\n            duration: speed\r\n        })\r\n        navbar.style.opacity = 1;\r\n\r\n        \r\n        \r\n    }\r\n    if(window.scrollY < topSectionHeight - navbar.offsetHeight - 100 && navbarActive){\r\n        navbarActive = false;\r\n        navbar.style.opacity = 1;\r\n        \r\n        navbar.animate([\r\n            {opacity: '1'},\r\n            {opacity: '0'},\r\n        ],\r\n            {\r\n            duration: speed\r\n        })\r\n        setTimeout(() => {\r\n            navbar.style.position = 'absolute';\r\n            navbar.classList.remove('header_active');\r\n        }, speed);\r\n        \r\n        \r\n    }\r\n    \r\n})\r\n\r\n\r\n\r\n\r\nclass Player{\r\n    constructor (option){\r\n        this.selector = {\r\n            player: document.querySelector(`.${option}`),\r\n            video: document.querySelector(`.${option}__video`),\r\n            playerControls: document.querySelector(`.${option}-controls`),\r\n        }\r\n        this.navigationClassName = {\r\n            nav : `${option}__nav`,\r\n            \r\n            play : `${option}-controls__play`,\r\n            centerButton : `${option}__center-btn`,\r\n            screen : `${option}-controls__screen`,\r\n            \r\n            progressBar : `${option}-progress-bar`,\r\n            progressTime : `${option}-progress-bar__time`,\r\n            progressBuffer : `${option}-progress-bar__buffer`,\r\n            \r\n            mute : `${option}-controls__volume-btn`,\r\n            volumeBar:`${option}-controls__volume-bar`,\r\n            volumeLevel:`${option}-controls__volume-bar-progress`,\r\n            \r\n            timeDurationMin : `${option}-time__duration-minute`,\r\n            timeDurationSec : `${option}-time__duration-sec` ,\r\n            timeCurentMin : `${option}-time__curent-minute`,\r\n            timeCurentSec : `${option}-time__curent-sec`,\r\n            \r\n            \r\n            \r\n            setting:`${option}-controls__setting`,\r\n            settingMenu:`${option}-controls__setting-menu`,\r\n            videoSpeed:`${option}__speed`,\r\n            \r\n            loader:`${option}__loader`,\r\n        }\r\n         \r\n        this.navigation = {\r\n            nav : document.querySelector(`.${this.navigationClassName.nav}`),\r\n            \r\n            play : document.querySelector(`.${this.navigationClassName.play}`),\r\n            \r\n            centerButton : document.querySelector(`.${this.navigationClassName.centerButton}`),\r\n            \r\n            screen : document.querySelector(`.${this.navigationClassName.screen}`),\r\n            \r\n            progressBar : document.querySelector(`.${this.navigationClassName.progressBar}`),\r\n            progressTime : document.querySelector(`.${this.navigationClassName.progressTime}`),\r\n            progressBuffer : document.querySelector(`.${this.navigationClassName.progressBuffer}`),\r\n            \r\n            mute : document.querySelector(`.${this.navigationClassName.mute}`),\r\n            volumeBar : document.querySelector(`.${this.navigationClassName.volumeBar}`),\r\n            volumeLevel : document.querySelector(`.${this.navigationClassName.volumeLevel}`),\r\n            \r\n            timeDurationMin : document.querySelector(`.${this.navigationClassName.timeDurationMin}`),\r\n            timeDurationSec : document.querySelector(`.${this.navigationClassName.timeDurationSec}`),\r\n            timeCurentMin : document.querySelector(`.${this.navigationClassName.timeCurentMin}`),\r\n            timeCurentSec : document.querySelector(`.${this.navigationClassName.timeCurentSec}`),\r\n            \r\n            \r\n            \r\n            setting : document.querySelector(`.${this.navigationClassName.setting}`),\r\n            settingMenu : document.querySelector(`.${this.navigationClassName.settingMenu}`),\r\n            videoSpeed : document.querySelectorAll(`.${this.navigationClassName.videoSpeed}`),\r\n            \r\n            loader : document.querySelectorAll(`.${this.navigationClassName.loader}`),\r\n            \r\n        }\r\n        \r\n        this.iconClassName = {\r\n            mainClass: 'fas',\r\n            play: 'fa-play',\r\n            pause: 'fa-pause',\r\n            setting: 'fa-cog',\r\n            fullScreen: 'fa-expand',\r\n            smallScreen: 'fa-compress',\r\n            \r\n            volumeUp: 'fa-volume-up',\r\n            volumeDown: 'fa-volume-down',\r\n            volumeOff: 'fa-volume-off',\r\n            volumeMute: 'fa-volume-mute',\r\n        }\r\n        this.volume = this.selector.video.volume;\r\n        \r\n        this.videoAlready = false;\r\n        this.videoScroll = false;\r\n        this.timer;\r\n        \r\n        this.start();\r\n    }\r\n    \r\n    start(){\r\n        \r\n        /* слушаем нажатие на кнопки   */\r\n        this.selector.player.addEventListener('click', (e) =>{\r\n            \r\n            if (e.target != this.navigation.setting){\r\n                \r\n                this.navigation.settingMenu.classList.remove(`${this.navigationClassName.settingMenu}_active`);\r\n            }\r\n            \r\n            switch (e.target) {\r\n                case this.navigation.play:\r\n                    this.play();\r\n                    break;\r\n                    \r\n                case this.selector.video:\r\n                    this.play();\r\n                    break;\r\n                    \r\n                case this.navigation.centerButton:\r\n                    this.play();\r\n                    break;\r\n                    \r\n                case this.navigation.screen:\r\n                    this.screen();\r\n                    break;\r\n                    \r\n                case this.navigation.mute:\r\n                    this.mute();\r\n                    \r\n                    break;\r\n                case this.navigation.setting:\r\n                    \r\n                    this.navigation.settingMenu.classList.toggle(`${this.navigationClassName.settingMenu}_active`);\r\n                    \r\n                    break;\r\n                    \r\n            \r\n                default:\r\n                    break;\r\n            }\r\n            if (e.target.classList.contains(this.navigationClassName.videoSpeed)) {\r\n                \r\n                this.speed(e.target)\r\n            }\r\n            \r\n        });\r\n        \r\n        /* смена полноэкранного режима */\r\n        this.selector.player.addEventListener(\"fullscreenchange\", (e) =>{\r\n            if (!document.fullscreenElement) {\r\n                this.navigation.screen.classList.remove(this.iconClassName.smallScreen);\r\n                this.navigation.screen.classList.add(this.iconClassName.fullScreen);\r\n                \r\n                document.body.classList.remove('scroll-stop');\r\n            }\r\n            else{\r\n                this.navigation.screen.classList.remove(this.iconClassName.fullScreen);\r\n                this.navigation.screen.classList.add(this.iconClassName.smallScreen);\r\n                \r\n                document.body.classList.add('scroll-stop');\r\n            }\r\n            \r\n        });\r\n        \r\n        /* двойной клик для полноэкранного режима */\r\n        this.selector.video.addEventListener('dblclick', () =>{\r\n            this.screen();\r\n        });\r\n        \r\n        /* работает при возпроизведении */\r\n        this.selector.video.addEventListener('timeupdate', () =>{\r\n            if (!this.videoScroll) {\r\n                this.navigation.progressTime.style.width = `${this.selector.video.currentTime / this.selector.video.duration * 100}%`;\r\n            }\r\n            \r\n\r\n            this.navigation.progressBuffer.style.width = `${this.selector.video.buffered.end(this.selector.video.buffered.length-1) / this.selector.video.duration * 100}%`;\r\n            \r\n            this.navigation.timeCurentMin.innerHTML = Math.floor(this.selector.video.currentTime / 60);\r\n            this.navigation.timeCurentSec.innerHTML = `${Math.floor(this.selector.video.currentTime % 60) < 10 ? '0' : ''}${Math.floor(this.selector.video.currentTime % 60)}`;\r\n            \r\n            this.navigation.timeDurationMin.innerHTML = Math.floor(this.selector.video.duration / 60);\r\n            this.navigation.timeDurationSec.innerHTML = `${Math.floor(this.selector.video.duration % 60) < 10 ? '0' : ''}${Math.floor(this.selector.video.duration % 60)}`;\r\n            \r\n        });\r\n        \r\n        /* работает при загрузке видео данных */\r\n        this.selector.video.addEventListener('progress', () =>{\r\n            if (this.videoAlready) {\r\n                this.navigation.progressBuffer.style.width = `${this.selector.video.buffered.end(this.selector.video.buffered.length-1) / this.selector.video.duration * 100}%`;\r\n                \r\n            }\r\n                \r\n            \r\n            \r\n        });\r\n        \r\n        this.selector.video.addEventListener('waiting', () =>{\r\n            this.navigation.loader.classList.add(`${this.navigationClassName.loader}_active`);\r\n                \r\n        });\r\n        \r\n        \r\n        \r\n        /* конец видео */\r\n        this.selector.video.addEventListener('ended', () =>{\r\n            this.selector.video.currentTime = 0;\r\n            \r\n            this.navigation.play.classList.remove(this.iconClassName.pause);\r\n            this.navigation.play.classList.add(this.iconClassName.play);\r\n        });\r\n        \r\n        \r\n        /* Движение курсора */\r\n        this.selector.player.addEventListener('mousemove', () =>{\r\n            clearTimeout(this.timer);\r\n            if (!this.navigation.nav.classList.contains(`${this.navigationClassName.nav}_active`) && this.videoAlready) {\r\n                this.navigation.nav.classList.add(`${this.navigationClassName.nav}_active`);\r\n                \r\n                this.selector.player.style.cursor = 'auto';\r\n                \r\n            }\r\n            if (!this.selector.video.paused && this.navigation.nav.classList.contains(`${this.navigationClassName.nav}_active`)) {\r\n                \r\n                this.timer = setTimeout(() => {\r\n                    \r\n                    this.navigation.nav.classList.remove(`${this.navigationClassName.nav}_active`);\r\n                    \r\n                    this.selector.player.style.cursor = 'none';\r\n                }, 2000);\r\n            }\r\n            \r\n            \r\n        });\r\n        \r\n        \r\n        \r\n        this.progressBar();\r\n        this.volumeBar();\r\n    }\r\n    play(){\r\n        if (!this.videoAlready) {\r\n            this.navigation.nav.classList.add(`${this.navigationClassName.nav}_active`);\r\n            this.navigation.centerButton.style.display = 'none';\r\n        }\r\n        \r\n        \r\n        this.videoAlready = true;\r\n       if (this.selector.video.paused) {\r\n            this.selector.video.play();\r\n            this.navigation.play.classList.remove(this.iconClassName.play);\r\n            this.navigation.play.classList.add(this.iconClassName.pause);\r\n            \r\n        }\r\n       else{\r\n            this.selector.video.pause();\r\n            this.navigation.play.classList.remove(this.iconClassName.pause);\r\n            this.navigation.play.classList.add(this.iconClassName.play);\r\n            \r\n        }\r\n        \r\n   } \r\n   \r\n   screen(){\r\n        if (!document.fullscreenElement) {\r\n            this.selector.player.requestFullscreen();\r\n        }\r\n        else{\r\n            document.exitFullscreen();\r\n            \r\n        }\r\n         \r\n   }\r\n    mute(){\r\n        this.navigation.mute.classList.remove(this.iconClassName.volumeUp);\r\n        this.navigation.mute.classList.remove(this.iconClassName.volumeDown);\r\n        this.navigation.mute.classList.remove(this.iconClassName.volumeOff);\r\n        this.navigation.mute.classList.remove(this.iconClassName.volumeMute);\r\n        \r\n        if (!this.selector.video.muted) {\r\n            this.selector.video.muted = true;\r\n           \r\n            \r\n            this.navigation.mute.classList.add(this.iconClassName.volumeMute);\r\n            \r\n        }\r\n        else{\r\n            this.selector.video.muted = false;\r\n            \r\n            if (this.volume > 0.5) {\r\n                this.navigation.mute.classList.add(this.iconClassName.volumeUp);\r\n            }\r\n            else if(this.volume < 0.1){\r\n                this.navigation.mute.classList.add(this.iconClassName.volumeOff);\r\n            }\r\n            else if(this.volume < 0.5){\r\n                this.navigation.mute.classList.add(this.iconClassName.volumeDown);\r\n            }\r\n            \r\n        }\r\n        \r\n    }\r\n    \r\n    progressBar(){\r\n        let context = this;\r\n        this.navigation.progressBar.addEventListener('mousedown', progreesStart);\r\n        this.navigation.progressBar.addEventListener('touchstart', progreesStart);\r\n            \r\n            \r\n        function progreesStart(e) {\r\n            context.videoScroll = true;\r\n        \r\n            context.selector.video.currentTime = (((e.clientX || e.changedTouches[0].clientX)-context.navigation.progressBar.getBoundingClientRect().x) / context.navigation.progressBar.offsetWidth * context.selector.video.duration);\r\n            \r\n            context.navigation.progressTime.style.width = `${((e.clientX || e.changedTouches[0].clientX)-context.navigation.progressBar.getBoundingClientRect().x) / context.navigation.progressBar.offsetWidth * 100}%`;\r\n            \r\n            context.selector.player.addEventListener('mousemove', progressMove);\r\n            context.selector.player.addEventListener('mouseup', progressEnd);\r\n            context.selector.player.addEventListener('mouseleave', progressEnd);\r\n            context.selector.player.addEventListener('touchmove', progressMove);\r\n            context.selector.player.addEventListener('touchend', progressEnd);\r\n            context.selector.player.addEventListener('touchcancel', progressEnd);\r\n        }\r\n        \r\n        function progressMove(e) {\r\n            context.selector.video.currentTime = (((e.clientX || e.changedTouches[0].clientX)-context.navigation.progressBar.getBoundingClientRect().x) / context.navigation.progressBar.offsetWidth * context.selector.video.duration);\r\n            \r\n            context.navigation.progressTime.style.width = `${((e.clientX || e.changedTouches[0].clientX)-context.navigation.progressBar.getBoundingClientRect().x) / context.navigation.progressBar.offsetWidth * 100}%`;\r\n        }\r\n        function progressEnd() {\r\n            context.videoScroll = false;\r\n            context.selector.player.removeEventListener('mousemove', progressMove);\r\n            context.selector.player.removeEventListener('mouseup', progressEnd);\r\n            context.selector.player.removeEventListener('mouseleave', progressEnd);\r\n            context.selector.player.removeEventListener('touchmove', progressMove);\r\n            context.selector.player.removeEventListener('touchend', progressEnd);\r\n            context.selector.player.removeEventListener('touchcancel', progressEnd);\r\n        }\r\n        \r\n        \r\n    }\r\n    volumeBar(){\r\n        let context = this;\r\n        \r\n        \r\n        function icon(lev) {\r\n            context.navigation.mute.classList.remove(context.iconClassName.volumeUp);\r\n            context.navigation.mute.classList.remove(context.iconClassName.volumeDown);\r\n            context.navigation.mute.classList.remove(context.iconClassName.volumeOff);\r\n            context.navigation.mute.classList.remove(context.iconClassName.volumeMute);\r\n            if (lev > 0.5) {\r\n                context.navigation.mute.classList.add(context.iconClassName.volumeUp);\r\n            }\r\n            else if(lev < 0.1){\r\n                context.navigation.mute.classList.add(context.iconClassName.volumeOff);\r\n            }\r\n            else if(lev < 0.5){\r\n                context.navigation.mute.classList.add(context.iconClassName.volumeDown);\r\n            }\r\n        }\r\n        \r\n        icon(this.volume);\r\n        this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n        \r\n        this.navigation.volumeBar.addEventListener('mousedown', (e) =>{\r\n            this.volume = ((e.clientX-this.navigation.volumeBar.getBoundingClientRect().x) / this.navigation.volumeBar.offsetWidth);\r\n            \r\n            this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n            this.selector.video.volume = this.volume;\r\n            if (this.selector.video.muted) {\r\n                this.mute();\r\n            }\r\n            icon(this.volume);\r\n\r\n            this.selector.player.addEventListener('mousemove', progressMove);\r\n            this.selector.player.addEventListener('mouseup', progressEnd);\r\n            this.selector.player.addEventListener('mouseleave', progressEnd);\r\n            \r\n        })\r\n        function progressMove(e) {\r\n            context.volume = ((e.clientX-context.navigation.volumeBar.getBoundingClientRect().x) / context.navigation.volumeBar.offsetWidth);\r\n            if (context.volume >= 0 && context.volume <= 1) {\r\n                context.navigation.volumeLevel.style.width = `${context.volume * 100}%`;\r\n                \r\n                context.selector.video.volume = context.volume;\r\n                icon(context.volume);\r\n            }\r\n            else if (context.volume > 1) {\r\n                context.volume = 1;\r\n                context.selector.video.volume = context.volume;\r\n                context.navigation.volumeLevel.style.width = `${context.volume * 100}%`;\r\n                icon(context.volume);\r\n            }\r\n            else{\r\n                context.volume = 0;\r\n                context.selector.video.volume = context.volume;\r\n                context.navigation.volumeLevel.style.width = `${context.volume * 100}%`;\r\n                icon(context.volume);\r\n            }\r\n            \r\n        }\r\n        function progressEnd() {\r\n            \r\n            context.selector.player.removeEventListener('mousemove', progressMove);\r\n            context.selector.player.removeEventListener('mousemove', progressEnd);\r\n            context.selector.player.removeEventListener('mouseleave', progressEnd);\r\n        }\r\n        \r\n        \r\n        this.selector.video.addEventListener('wheel', (e)=>{\r\n            if (document.fullscreenElement) {\r\n                this.volume = this.volume - e.deltaY / 2000;\r\n                \r\n                if (this.volume >= 0 && this.volume <= 1) {\r\n                    this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n                    \r\n                    this.selector.video.volume = this.volume;\r\n                    icon(this.volume);\r\n                }\r\n                else if (this.volume > 1) {\r\n                    this.volume = 1;\r\n                    this.selector.video.volume = this.volume;\r\n                    this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n                    icon(this.volume);\r\n                }\r\n                else{\r\n                    this.volume = 0;\r\n                    this.selector.video.volume = this.volume;\r\n                    this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n                    icon(this.volume);\r\n                }\r\n                \r\n            \r\n            }\r\n        });\r\n        \r\n    }\r\n    speed(btn){\r\n        this.selector.video.playbackRate = btn.getAttribute('speed')\r\n        this.navigation.videoSpeed.forEach((element) =>{\r\n            element.classList.remove(`${this.navigationClassName.videoSpeed}_active`)\r\n        })\r\n        btn.classList.add(`${this.navigationClassName.videoSpeed}_active`);\r\n        \r\n         \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst features__player = new Player(\"player\");\r\n\r\n\r\nlet colLeft = document.querySelector('.subscribe__col-left');\r\nlet colRight = document.querySelector('.subscribe__col-right');\r\nlet colTitle = document.querySelector('.subscribe__col-title');\r\n\r\nconst mediaNotebook = window.matchMedia('(max-width: 991.98px)');\r\n\r\nmediaNotebook.addListener(media);\r\n\r\nfunction media(e) {\r\n    if (e.matches) {\r\n        colLeft.prepend(colTitle);\r\n    }\r\n    else{\r\n        colRight.prepend(colTitle);\r\n    }\r\n    \r\n}\r\nmedia(mediaNotebook);\r\n\r\n\r\n}, false);","class Player{\r\n    constructor (option){\r\n        this.selector = {\r\n            player: document.querySelector(`.${option}`),\r\n            video: document.querySelector(`.${option}__video`),\r\n            playerControls: document.querySelector(`.${option}-controls`),\r\n        }\r\n        this.navigationClassName = {\r\n            nav : `${option}__nav`,\r\n            \r\n            play : `${option}-controls__play`,\r\n            centerButton : `${option}__center-btn`,\r\n            screen : `${option}-controls__screen`,\r\n            \r\n            progressBar : `${option}-progress-bar`,\r\n            progressTime : `${option}-progress-bar__time`,\r\n            progressBuffer : `${option}-progress-bar__buffer`,\r\n            \r\n            mute : `${option}-controls__volume-btn`,\r\n            volumeBar:`${option}-controls__volume-bar`,\r\n            volumeLevel:`${option}-controls__volume-bar-progress`,\r\n            \r\n            timeDurationMin : `${option}-time__duration-minute`,\r\n            timeDurationSec : `${option}-time__duration-sec` ,\r\n            timeCurentMin : `${option}-time__curent-minute`,\r\n            timeCurentSec : `${option}-time__curent-sec`,\r\n            \r\n            \r\n            \r\n            setting:`${option}-controls__setting`,\r\n            settingMenu:`${option}-controls__setting-menu`,\r\n            videoSpeed:`${option}__speed`,\r\n            \r\n            loader:`${option}__loader`,\r\n        }\r\n         \r\n        this.navigation = {\r\n            nav : document.querySelector(`.${this.navigationClassName.nav}`),\r\n            \r\n            play : document.querySelector(`.${this.navigationClassName.play}`),\r\n            \r\n            centerButton : document.querySelector(`.${this.navigationClassName.centerButton}`),\r\n            \r\n            screen : document.querySelector(`.${this.navigationClassName.screen}`),\r\n            \r\n            progressBar : document.querySelector(`.${this.navigationClassName.progressBar}`),\r\n            progressTime : document.querySelector(`.${this.navigationClassName.progressTime}`),\r\n            progressBuffer : document.querySelector(`.${this.navigationClassName.progressBuffer}`),\r\n            \r\n            mute : document.querySelector(`.${this.navigationClassName.mute}`),\r\n            volumeBar : document.querySelector(`.${this.navigationClassName.volumeBar}`),\r\n            volumeLevel : document.querySelector(`.${this.navigationClassName.volumeLevel}`),\r\n            \r\n            timeDurationMin : document.querySelector(`.${this.navigationClassName.timeDurationMin}`),\r\n            timeDurationSec : document.querySelector(`.${this.navigationClassName.timeDurationSec}`),\r\n            timeCurentMin : document.querySelector(`.${this.navigationClassName.timeCurentMin}`),\r\n            timeCurentSec : document.querySelector(`.${this.navigationClassName.timeCurentSec}`),\r\n            \r\n            \r\n            \r\n            setting : document.querySelector(`.${this.navigationClassName.setting}`),\r\n            settingMenu : document.querySelector(`.${this.navigationClassName.settingMenu}`),\r\n            videoSpeed : document.querySelectorAll(`.${this.navigationClassName.videoSpeed}`),\r\n            \r\n            loader : document.querySelectorAll(`.${this.navigationClassName.loader}`),\r\n            \r\n        }\r\n        \r\n        this.iconClassName = {\r\n            mainClass: 'fas',\r\n            play: 'fa-play',\r\n            pause: 'fa-pause',\r\n            setting: 'fa-cog',\r\n            fullScreen: 'fa-expand',\r\n            smallScreen: 'fa-compress',\r\n            \r\n            volumeUp: 'fa-volume-up',\r\n            volumeDown: 'fa-volume-down',\r\n            volumeOff: 'fa-volume-off',\r\n            volumeMute: 'fa-volume-mute',\r\n        }\r\n        this.volume = this.selector.video.volume;\r\n        \r\n        this.videoAlready = false;\r\n        this.videoScroll = false;\r\n        this.timer;\r\n        \r\n        this.start();\r\n    }\r\n    \r\n    start(){\r\n        \r\n        /* слушаем нажатие на кнопки   */\r\n        this.selector.player.addEventListener('click', (e) =>{\r\n            \r\n            if (e.target != this.navigation.setting){\r\n                \r\n                this.navigation.settingMenu.classList.remove(`${this.navigationClassName.settingMenu}_active`);\r\n            }\r\n            \r\n            switch (e.target) {\r\n                case this.navigation.play:\r\n                    this.play();\r\n                    break;\r\n                    \r\n                case this.selector.video:\r\n                    this.play();\r\n                    break;\r\n                    \r\n                case this.navigation.centerButton:\r\n                    this.play();\r\n                    break;\r\n                    \r\n                case this.navigation.screen:\r\n                    this.screen();\r\n                    break;\r\n                    \r\n                case this.navigation.mute:\r\n                    this.mute();\r\n                    \r\n                    break;\r\n                case this.navigation.setting:\r\n                    \r\n                    this.navigation.settingMenu.classList.toggle(`${this.navigationClassName.settingMenu}_active`);\r\n                    \r\n                    break;\r\n                    \r\n            \r\n                default:\r\n                    break;\r\n            }\r\n            if (e.target.classList.contains(this.navigationClassName.videoSpeed)) {\r\n                \r\n                this.speed(e.target)\r\n            }\r\n            \r\n        });\r\n        \r\n        /* смена полноэкранного режима */\r\n        this.selector.player.addEventListener(\"fullscreenchange\", (e) =>{\r\n            if (!document.fullscreenElement) {\r\n                this.navigation.screen.classList.remove(this.iconClassName.smallScreen);\r\n                this.navigation.screen.classList.add(this.iconClassName.fullScreen);\r\n                \r\n                document.body.classList.remove('scroll-stop');\r\n            }\r\n            else{\r\n                this.navigation.screen.classList.remove(this.iconClassName.fullScreen);\r\n                this.navigation.screen.classList.add(this.iconClassName.smallScreen);\r\n                \r\n                document.body.classList.add('scroll-stop');\r\n            }\r\n            \r\n        });\r\n        \r\n        /* двойной клик для полноэкранного режима */\r\n        this.selector.video.addEventListener('dblclick', () =>{\r\n            this.screen();\r\n        });\r\n        \r\n        /* работает при возпроизведении */\r\n        this.selector.video.addEventListener('timeupdate', () =>{\r\n            if (!this.videoScroll) {\r\n                this.navigation.progressTime.style.width = `${this.selector.video.currentTime / this.selector.video.duration * 100}%`;\r\n            }\r\n            \r\n\r\n            this.navigation.progressBuffer.style.width = `${this.selector.video.buffered.end(this.selector.video.buffered.length-1) / this.selector.video.duration * 100}%`;\r\n            \r\n            this.navigation.timeCurentMin.innerHTML = Math.floor(this.selector.video.currentTime / 60);\r\n            this.navigation.timeCurentSec.innerHTML = `${Math.floor(this.selector.video.currentTime % 60) < 10 ? '0' : ''}${Math.floor(this.selector.video.currentTime % 60)}`;\r\n            \r\n            this.navigation.timeDurationMin.innerHTML = Math.floor(this.selector.video.duration / 60);\r\n            this.navigation.timeDurationSec.innerHTML = `${Math.floor(this.selector.video.duration % 60) < 10 ? '0' : ''}${Math.floor(this.selector.video.duration % 60)}`;\r\n            \r\n        });\r\n        \r\n        /* работает при загрузке видео данных */\r\n        this.selector.video.addEventListener('progress', () =>{\r\n            if (this.videoAlready) {\r\n                this.navigation.progressBuffer.style.width = `${this.selector.video.buffered.end(this.selector.video.buffered.length-1) / this.selector.video.duration * 100}%`;\r\n                \r\n            }\r\n                \r\n            \r\n            \r\n        });\r\n        \r\n        this.selector.video.addEventListener('waiting', () =>{\r\n            this.navigation.loader.classList.add(`${this.navigationClassName.loader}_active`);\r\n                \r\n        });\r\n        \r\n        \r\n        \r\n        /* конец видео */\r\n        this.selector.video.addEventListener('ended', () =>{\r\n            this.selector.video.currentTime = 0;\r\n            \r\n            this.navigation.play.classList.remove(this.iconClassName.pause);\r\n            this.navigation.play.classList.add(this.iconClassName.play);\r\n        });\r\n        \r\n        \r\n        /* Движение курсора */\r\n        this.selector.player.addEventListener('mousemove', () =>{\r\n            clearTimeout(this.timer);\r\n            if (!this.navigation.nav.classList.contains(`${this.navigationClassName.nav}_active`) && this.videoAlready) {\r\n                this.navigation.nav.classList.add(`${this.navigationClassName.nav}_active`);\r\n                \r\n                this.selector.player.style.cursor = 'auto';\r\n                \r\n            }\r\n            if (!this.selector.video.paused && this.navigation.nav.classList.contains(`${this.navigationClassName.nav}_active`)) {\r\n                \r\n                this.timer = setTimeout(() => {\r\n                    \r\n                    this.navigation.nav.classList.remove(`${this.navigationClassName.nav}_active`);\r\n                    \r\n                    this.selector.player.style.cursor = 'none';\r\n                }, 2000);\r\n            }\r\n            \r\n            \r\n        });\r\n        \r\n        \r\n        \r\n        this.progressBar();\r\n        this.volumeBar();\r\n    }\r\n    play(){\r\n        if (!this.videoAlready) {\r\n            this.navigation.nav.classList.add(`${this.navigationClassName.nav}_active`);\r\n            this.navigation.centerButton.style.display = 'none';\r\n        }\r\n        \r\n        \r\n        this.videoAlready = true;\r\n       if (this.selector.video.paused) {\r\n            this.selector.video.play();\r\n            this.navigation.play.classList.remove(this.iconClassName.play);\r\n            this.navigation.play.classList.add(this.iconClassName.pause);\r\n            \r\n        }\r\n       else{\r\n            this.selector.video.pause();\r\n            this.navigation.play.classList.remove(this.iconClassName.pause);\r\n            this.navigation.play.classList.add(this.iconClassName.play);\r\n            \r\n        }\r\n        \r\n   } \r\n   \r\n   screen(){\r\n        if (!document.fullscreenElement) {\r\n            this.selector.player.requestFullscreen();\r\n        }\r\n        else{\r\n            document.exitFullscreen();\r\n            \r\n        }\r\n         \r\n   }\r\n    mute(){\r\n        this.navigation.mute.classList.remove(this.iconClassName.volumeUp);\r\n        this.navigation.mute.classList.remove(this.iconClassName.volumeDown);\r\n        this.navigation.mute.classList.remove(this.iconClassName.volumeOff);\r\n        this.navigation.mute.classList.remove(this.iconClassName.volumeMute);\r\n        \r\n        if (!this.selector.video.muted) {\r\n            this.selector.video.muted = true;\r\n           \r\n            \r\n            this.navigation.mute.classList.add(this.iconClassName.volumeMute);\r\n            \r\n        }\r\n        else{\r\n            this.selector.video.muted = false;\r\n            \r\n            if (this.volume > 0.5) {\r\n                this.navigation.mute.classList.add(this.iconClassName.volumeUp);\r\n            }\r\n            else if(this.volume < 0.1){\r\n                this.navigation.mute.classList.add(this.iconClassName.volumeOff);\r\n            }\r\n            else if(this.volume < 0.5){\r\n                this.navigation.mute.classList.add(this.iconClassName.volumeDown);\r\n            }\r\n            \r\n        }\r\n        \r\n    }\r\n    \r\n    progressBar(){\r\n        let context = this;\r\n        this.navigation.progressBar.addEventListener('mousedown', progreesStart);\r\n        this.navigation.progressBar.addEventListener('touchstart', progreesStart);\r\n            \r\n            \r\n        function progreesStart(e) {\r\n            context.videoScroll = true;\r\n        \r\n            context.selector.video.currentTime = (((e.clientX || e.changedTouches[0].clientX)-context.navigation.progressBar.getBoundingClientRect().x) / context.navigation.progressBar.offsetWidth * context.selector.video.duration);\r\n            \r\n            context.navigation.progressTime.style.width = `${((e.clientX || e.changedTouches[0].clientX)-context.navigation.progressBar.getBoundingClientRect().x) / context.navigation.progressBar.offsetWidth * 100}%`;\r\n            \r\n            context.selector.player.addEventListener('mousemove', progressMove);\r\n            context.selector.player.addEventListener('mouseup', progressEnd);\r\n            context.selector.player.addEventListener('mouseleave', progressEnd);\r\n            context.selector.player.addEventListener('touchmove', progressMove);\r\n            context.selector.player.addEventListener('touchend', progressEnd);\r\n            context.selector.player.addEventListener('touchcancel', progressEnd);\r\n        }\r\n        \r\n        function progressMove(e) {\r\n            context.selector.video.currentTime = (((e.clientX || e.changedTouches[0].clientX)-context.navigation.progressBar.getBoundingClientRect().x) / context.navigation.progressBar.offsetWidth * context.selector.video.duration);\r\n            \r\n            context.navigation.progressTime.style.width = `${((e.clientX || e.changedTouches[0].clientX)-context.navigation.progressBar.getBoundingClientRect().x) / context.navigation.progressBar.offsetWidth * 100}%`;\r\n        }\r\n        function progressEnd() {\r\n            context.videoScroll = false;\r\n            context.selector.player.removeEventListener('mousemove', progressMove);\r\n            context.selector.player.removeEventListener('mouseup', progressEnd);\r\n            context.selector.player.removeEventListener('mouseleave', progressEnd);\r\n            context.selector.player.removeEventListener('touchmove', progressMove);\r\n            context.selector.player.removeEventListener('touchend', progressEnd);\r\n            context.selector.player.removeEventListener('touchcancel', progressEnd);\r\n        }\r\n        \r\n        \r\n    }\r\n    volumeBar(){\r\n        let context = this;\r\n        \r\n        \r\n        function icon(lev) {\r\n            context.navigation.mute.classList.remove(context.iconClassName.volumeUp);\r\n            context.navigation.mute.classList.remove(context.iconClassName.volumeDown);\r\n            context.navigation.mute.classList.remove(context.iconClassName.volumeOff);\r\n            context.navigation.mute.classList.remove(context.iconClassName.volumeMute);\r\n            if (lev > 0.5) {\r\n                context.navigation.mute.classList.add(context.iconClassName.volumeUp);\r\n            }\r\n            else if(lev < 0.1){\r\n                context.navigation.mute.classList.add(context.iconClassName.volumeOff);\r\n            }\r\n            else if(lev < 0.5){\r\n                context.navigation.mute.classList.add(context.iconClassName.volumeDown);\r\n            }\r\n        }\r\n        \r\n        icon(this.volume);\r\n        this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n        \r\n        this.navigation.volumeBar.addEventListener('mousedown', (e) =>{\r\n            this.volume = ((e.clientX-this.navigation.volumeBar.getBoundingClientRect().x) / this.navigation.volumeBar.offsetWidth);\r\n            \r\n            this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n            this.selector.video.volume = this.volume;\r\n            if (this.selector.video.muted) {\r\n                this.mute();\r\n            }\r\n            icon(this.volume);\r\n\r\n            this.selector.player.addEventListener('mousemove', progressMove);\r\n            this.selector.player.addEventListener('mouseup', progressEnd);\r\n            this.selector.player.addEventListener('mouseleave', progressEnd);\r\n            \r\n        })\r\n        function progressMove(e) {\r\n            context.volume = ((e.clientX-context.navigation.volumeBar.getBoundingClientRect().x) / context.navigation.volumeBar.offsetWidth);\r\n            if (context.volume >= 0 && context.volume <= 1) {\r\n                context.navigation.volumeLevel.style.width = `${context.volume * 100}%`;\r\n                \r\n                context.selector.video.volume = context.volume;\r\n                icon(context.volume);\r\n            }\r\n            else if (context.volume > 1) {\r\n                context.volume = 1;\r\n                context.selector.video.volume = context.volume;\r\n                context.navigation.volumeLevel.style.width = `${context.volume * 100}%`;\r\n                icon(context.volume);\r\n            }\r\n            else{\r\n                context.volume = 0;\r\n                context.selector.video.volume = context.volume;\r\n                context.navigation.volumeLevel.style.width = `${context.volume * 100}%`;\r\n                icon(context.volume);\r\n            }\r\n            \r\n        }\r\n        function progressEnd() {\r\n            \r\n            context.selector.player.removeEventListener('mousemove', progressMove);\r\n            context.selector.player.removeEventListener('mousemove', progressEnd);\r\n            context.selector.player.removeEventListener('mouseleave', progressEnd);\r\n        }\r\n        \r\n        \r\n        this.selector.video.addEventListener('wheel', (e)=>{\r\n            if (document.fullscreenElement) {\r\n                this.volume = this.volume - e.deltaY / 2000;\r\n                \r\n                if (this.volume >= 0 && this.volume <= 1) {\r\n                    this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n                    \r\n                    this.selector.video.volume = this.volume;\r\n                    icon(this.volume);\r\n                }\r\n                else if (this.volume > 1) {\r\n                    this.volume = 1;\r\n                    this.selector.video.volume = this.volume;\r\n                    this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n                    icon(this.volume);\r\n                }\r\n                else{\r\n                    this.volume = 0;\r\n                    this.selector.video.volume = this.volume;\r\n                    this.navigation.volumeLevel.style.width = `${this.volume * 100}%`;\r\n                    icon(this.volume);\r\n                }\r\n                \r\n            \r\n            }\r\n        });\r\n        \r\n    }\r\n    speed(btn){\r\n        this.selector.video.playbackRate = btn.getAttribute('speed')\r\n        this.navigation.videoSpeed.forEach((element) =>{\r\n            element.classList.remove(`${this.navigationClassName.videoSpeed}_active`)\r\n        })\r\n        btn.classList.add(`${this.navigationClassName.videoSpeed}_active`);\r\n        \r\n         \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst features__player = new Player(\"player\");\r\n\r\n","document.querySelector('.navbar__burger').addEventListener('click', function () {\r\n    this.classList.toggle('navbar__burger_active');\r\n    document.querySelector('.navbar__sidebar').classList.toggle('navbar__sidebar_active');\r\n    document.querySelector('.navbar').classList.toggle('navbar_active');\r\n    document.querySelector('body').classList.toggle('inactive');\r\n    \r\n});\r\n\r\n\r\n\r\nlet navbar = document.querySelector('.header');\r\nlet navbarActive = false;\r\nlet speed = 300;\r\nwindow.addEventListener('scroll', function(e) {\r\n    \r\n    let topSectionHeight = document.querySelector('.start').offsetHeight;\r\n    if (window.scrollY > topSectionHeight - navbar.offsetHeight && !navbarActive) {\r\n        navbarActive = true;\r\n        navbar.classList.add('header_active');\r\n        navbar.style.opacity = 0;\r\n        navbar.style.position = 'fixed';\r\n        navbar.animate([\r\n            {opacity: '0'},\r\n            {opacity: '1'},\r\n        ],\r\n            {\r\n            duration: speed\r\n        })\r\n        navbar.style.opacity = 1;\r\n\r\n        \r\n        \r\n    }\r\n    if(window.scrollY < topSectionHeight - navbar.offsetHeight - 100 && navbarActive){\r\n        navbarActive = false;\r\n        navbar.style.opacity = 1;\r\n        \r\n        navbar.animate([\r\n            {opacity: '1'},\r\n            {opacity: '0'},\r\n        ],\r\n            {\r\n            duration: speed\r\n        })\r\n        setTimeout(() => {\r\n            navbar.style.position = 'absolute';\r\n            navbar.classList.remove('header_active');\r\n        }, speed);\r\n        \r\n        \r\n    }\r\n    \r\n})\r\n\r\n\r\n\r\n"]}